/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.information_schema.tables;


import javax.annotation.Generated;

import jooq.postgresql.gen.information_schema.InformationSchema;
import jooq.postgresql.gen.information_schema.tables.records.UserDefinedTypesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDefinedTypes extends TableImpl<UserDefinedTypesRecord> {

    private static final long serialVersionUID = -1375451113;

    /**
     * The reference instance of <code>information_schema.user_defined_types</code>
     */
    public static final UserDefinedTypes USER_DEFINED_TYPES = new UserDefinedTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDefinedTypesRecord> getRecordType() {
        return UserDefinedTypesRecord.class;
    }

    /**
     * The column <code>information_schema.user_defined_types.user_defined_type_catalog</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> USER_DEFINED_TYPE_CATALOG = createField("user_defined_type_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.user_defined_type_schema</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> USER_DEFINED_TYPE_SCHEMA = createField("user_defined_type_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.user_defined_type_name</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> USER_DEFINED_TYPE_NAME = createField("user_defined_type_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.user_defined_type_category</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> USER_DEFINED_TYPE_CATEGORY = createField("user_defined_type_category", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.is_instantiable</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> IS_INSTANTIABLE = createField("is_instantiable", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>information_schema.user_defined_types.is_final</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> IS_FINAL = createField("is_final", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>information_schema.user_defined_types.ordering_form</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> ORDERING_FORM = createField("ordering_form", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.ordering_category</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> ORDERING_CATEGORY = createField("ordering_category", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.ordering_routine_catalog</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> ORDERING_ROUTINE_CATALOG = createField("ordering_routine_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.ordering_routine_schema</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> ORDERING_ROUTINE_SCHEMA = createField("ordering_routine_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.ordering_routine_name</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> ORDERING_ROUTINE_NAME = createField("ordering_routine_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.reference_type</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> REFERENCE_TYPE = createField("reference_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.data_type</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> DATA_TYPE = createField("data_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.character_maximum_length</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> CHARACTER_MAXIMUM_LENGTH = createField("character_maximum_length", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.character_octet_length</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> CHARACTER_OCTET_LENGTH = createField("character_octet_length", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.character_set_catalog</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> CHARACTER_SET_CATALOG = createField("character_set_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.character_set_schema</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> CHARACTER_SET_SCHEMA = createField("character_set_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.character_set_name</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> CHARACTER_SET_NAME = createField("character_set_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.collation_catalog</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> COLLATION_CATALOG = createField("collation_catalog", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.collation_schema</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> COLLATION_SCHEMA = createField("collation_schema", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.collation_name</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> COLLATION_NAME = createField("collation_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.numeric_precision</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> NUMERIC_PRECISION = createField("numeric_precision", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.numeric_precision_radix</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> NUMERIC_PRECISION_RADIX = createField("numeric_precision_radix", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.numeric_scale</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> NUMERIC_SCALE = createField("numeric_scale", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.datetime_precision</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> DATETIME_PRECISION = createField("datetime_precision", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.interval_type</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> INTERVAL_TYPE = createField("interval_type", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.interval_precision</code>.
     */
    public final TableField<UserDefinedTypesRecord, Integer> INTERVAL_PRECISION = createField("interval_precision", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.user_defined_types.source_dtd_identifier</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> SOURCE_DTD_IDENTIFIER = createField("source_dtd_identifier", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.user_defined_types.ref_dtd_identifier</code>.
     */
    public final TableField<UserDefinedTypesRecord, String> REF_DTD_IDENTIFIER = createField("ref_dtd_identifier", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>information_schema.user_defined_types</code> table reference
     */
    public UserDefinedTypes() {
        this(DSL.name("user_defined_types"), null);
    }

    /**
     * Create an aliased <code>information_schema.user_defined_types</code> table reference
     */
    public UserDefinedTypes(String alias) {
        this(DSL.name(alias), USER_DEFINED_TYPES);
    }

    /**
     * Create an aliased <code>information_schema.user_defined_types</code> table reference
     */
    public UserDefinedTypes(Name alias) {
        this(alias, USER_DEFINED_TYPES);
    }

    private UserDefinedTypes(Name alias, Table<UserDefinedTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDefinedTypes(Name alias, Table<UserDefinedTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserDefinedTypes(Table<O> child, ForeignKey<O, UserDefinedTypesRecord> key) {
        super(child, key, USER_DEFINED_TYPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDefinedTypes as(String alias) {
        return new UserDefinedTypes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDefinedTypes as(Name alias) {
        return new UserDefinedTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDefinedTypes rename(String name) {
        return new UserDefinedTypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDefinedTypes rename(Name name) {
        return new UserDefinedTypes(name, null);
    }
}
