/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlLanguages implements Serializable {

    private static final long serialVersionUID = -1205260499;

    private String sqlLanguageSource;
    private String sqlLanguageYear;
    private String sqlLanguageConformance;
    private String sqlLanguageIntegrity;
    private String sqlLanguageImplementation;
    private String sqlLanguageBindingStyle;
    private String sqlLanguageProgrammingLanguage;

    public SqlLanguages() {}

    public SqlLanguages(SqlLanguages value) {
        this.sqlLanguageSource = value.sqlLanguageSource;
        this.sqlLanguageYear = value.sqlLanguageYear;
        this.sqlLanguageConformance = value.sqlLanguageConformance;
        this.sqlLanguageIntegrity = value.sqlLanguageIntegrity;
        this.sqlLanguageImplementation = value.sqlLanguageImplementation;
        this.sqlLanguageBindingStyle = value.sqlLanguageBindingStyle;
        this.sqlLanguageProgrammingLanguage = value.sqlLanguageProgrammingLanguage;
    }

    public SqlLanguages(
        String sqlLanguageSource,
        String sqlLanguageYear,
        String sqlLanguageConformance,
        String sqlLanguageIntegrity,
        String sqlLanguageImplementation,
        String sqlLanguageBindingStyle,
        String sqlLanguageProgrammingLanguage
    ) {
        this.sqlLanguageSource = sqlLanguageSource;
        this.sqlLanguageYear = sqlLanguageYear;
        this.sqlLanguageConformance = sqlLanguageConformance;
        this.sqlLanguageIntegrity = sqlLanguageIntegrity;
        this.sqlLanguageImplementation = sqlLanguageImplementation;
        this.sqlLanguageBindingStyle = sqlLanguageBindingStyle;
        this.sqlLanguageProgrammingLanguage = sqlLanguageProgrammingLanguage;
    }

    public String getSqlLanguageSource() {
        return this.sqlLanguageSource;
    }

    public void setSqlLanguageSource(String sqlLanguageSource) {
        this.sqlLanguageSource = sqlLanguageSource;
    }

    public String getSqlLanguageYear() {
        return this.sqlLanguageYear;
    }

    public void setSqlLanguageYear(String sqlLanguageYear) {
        this.sqlLanguageYear = sqlLanguageYear;
    }

    public String getSqlLanguageConformance() {
        return this.sqlLanguageConformance;
    }

    public void setSqlLanguageConformance(String sqlLanguageConformance) {
        this.sqlLanguageConformance = sqlLanguageConformance;
    }

    public String getSqlLanguageIntegrity() {
        return this.sqlLanguageIntegrity;
    }

    public void setSqlLanguageIntegrity(String sqlLanguageIntegrity) {
        this.sqlLanguageIntegrity = sqlLanguageIntegrity;
    }

    public String getSqlLanguageImplementation() {
        return this.sqlLanguageImplementation;
    }

    public void setSqlLanguageImplementation(String sqlLanguageImplementation) {
        this.sqlLanguageImplementation = sqlLanguageImplementation;
    }

    public String getSqlLanguageBindingStyle() {
        return this.sqlLanguageBindingStyle;
    }

    public void setSqlLanguageBindingStyle(String sqlLanguageBindingStyle) {
        this.sqlLanguageBindingStyle = sqlLanguageBindingStyle;
    }

    public String getSqlLanguageProgrammingLanguage() {
        return this.sqlLanguageProgrammingLanguage;
    }

    public void setSqlLanguageProgrammingLanguage(String sqlLanguageProgrammingLanguage) {
        this.sqlLanguageProgrammingLanguage = sqlLanguageProgrammingLanguage;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SqlLanguages (");

        sb.append(sqlLanguageSource);
        sb.append(", ").append(sqlLanguageYear);
        sb.append(", ").append(sqlLanguageConformance);
        sb.append(", ").append(sqlLanguageIntegrity);
        sb.append(", ").append(sqlLanguageImplementation);
        sb.append(", ").append(sqlLanguageBindingStyle);
        sb.append(", ").append(sqlLanguageProgrammingLanguage);

        sb.append(")");
        return sb.toString();
    }
}
