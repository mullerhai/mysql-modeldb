/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.information_schema.tables;


import javax.annotation.Generated;

import jooq.postgresql.gen.information_schema.InformationSchema;
import jooq.postgresql.gen.information_schema.tables.records.SqlSizingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlSizing extends TableImpl<SqlSizingRecord> {

    private static final long serialVersionUID = 1907367249;

    /**
     * The reference instance of <code>information_schema.sql_sizing</code>
     */
    public static final SqlSizing SQL_SIZING = new SqlSizing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SqlSizingRecord> getRecordType() {
        return SqlSizingRecord.class;
    }

    /**
     * The column <code>information_schema.sql_sizing.sizing_id</code>.
     */
    public final TableField<SqlSizingRecord, Integer> SIZING_ID = createField("sizing_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.sql_sizing.sizing_name</code>.
     */
    public final TableField<SqlSizingRecord, String> SIZING_NAME = createField("sizing_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_sizing.supported_value</code>.
     */
    public final TableField<SqlSizingRecord, Integer> SUPPORTED_VALUE = createField("supported_value", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>information_schema.sql_sizing.comments</code>.
     */
    public final TableField<SqlSizingRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>information_schema.sql_sizing</code> table reference
     */
    public SqlSizing() {
        this(DSL.name("sql_sizing"), null);
    }

    /**
     * Create an aliased <code>information_schema.sql_sizing</code> table reference
     */
    public SqlSizing(String alias) {
        this(DSL.name(alias), SQL_SIZING);
    }

    /**
     * Create an aliased <code>information_schema.sql_sizing</code> table reference
     */
    public SqlSizing(Name alias) {
        this(alias, SQL_SIZING);
    }

    private SqlSizing(Name alias, Table<SqlSizingRecord> aliased) {
        this(alias, aliased, null);
    }

    private SqlSizing(Name alias, Table<SqlSizingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SqlSizing(Table<O> child, ForeignKey<O, SqlSizingRecord> key) {
        super(child, key, SQL_SIZING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlSizing as(String alias) {
        return new SqlSizing(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlSizing as(Name alias) {
        return new SqlSizing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SqlSizing rename(String name) {
        return new SqlSizing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SqlSizing rename(Name name) {
        return new SqlSizing(name, null);
    }
}
