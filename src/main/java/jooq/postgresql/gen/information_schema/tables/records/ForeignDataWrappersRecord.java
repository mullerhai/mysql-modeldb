/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.information_schema.tables.records;


import javax.annotation.Generated;

import jooq.postgresql.gen.information_schema.tables.ForeignDataWrappers;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForeignDataWrappersRecord extends TableRecordImpl<ForeignDataWrappersRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1081713228;

    /**
     * Setter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_catalog</code>.
     */
    public void setForeignDataWrapperCatalog(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_catalog</code>.
     */
    public String getForeignDataWrapperCatalog() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_name</code>.
     */
    public void setForeignDataWrapperName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_name</code>.
     */
    public String getForeignDataWrapperName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.foreign_data_wrappers.authorization_identifier</code>.
     */
    public void setAuthorizationIdentifier(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.foreign_data_wrappers.authorization_identifier</code>.
     */
    public String getAuthorizationIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.foreign_data_wrappers.library_name</code>.
     */
    public void setLibraryName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.foreign_data_wrappers.library_name</code>.
     */
    public String getLibraryName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_language</code>.
     */
    public void setForeignDataWrapperLanguage(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.foreign_data_wrappers.foreign_data_wrapper_language</code>.
     */
    public String getForeignDataWrapperLanguage() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ForeignDataWrappers.FOREIGN_DATA_WRAPPERS.FOREIGN_DATA_WRAPPER_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ForeignDataWrappers.FOREIGN_DATA_WRAPPERS.FOREIGN_DATA_WRAPPER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ForeignDataWrappers.FOREIGN_DATA_WRAPPERS.AUTHORIZATION_IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return ForeignDataWrappers.FOREIGN_DATA_WRAPPERS.LIBRARY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ForeignDataWrappers.FOREIGN_DATA_WRAPPERS.FOREIGN_DATA_WRAPPER_LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getForeignDataWrapperCatalog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getForeignDataWrapperName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAuthorizationIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLibraryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getForeignDataWrapperLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getForeignDataWrapperCatalog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getForeignDataWrapperName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAuthorizationIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLibraryName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getForeignDataWrapperLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord value1(String value) {
        setForeignDataWrapperCatalog(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord value2(String value) {
        setForeignDataWrapperName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord value3(String value) {
        setAuthorizationIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord value4(String value) {
        setLibraryName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord value5(String value) {
        setForeignDataWrapperLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForeignDataWrappersRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForeignDataWrappersRecord
     */
    public ForeignDataWrappersRecord() {
        super(ForeignDataWrappers.FOREIGN_DATA_WRAPPERS);
    }

    /**
     * Create a detached, initialised ForeignDataWrappersRecord
     */
    public ForeignDataWrappersRecord(String foreignDataWrapperCatalog, String foreignDataWrapperName, String authorizationIdentifier, String libraryName, String foreignDataWrapperLanguage) {
        super(ForeignDataWrappers.FOREIGN_DATA_WRAPPERS);

        set(0, foreignDataWrapperCatalog);
        set(1, foreignDataWrapperName);
        set(2, authorizationIdentifier);
        set(3, libraryName);
        set(4, foreignDataWrapperLanguage);
    }
}
