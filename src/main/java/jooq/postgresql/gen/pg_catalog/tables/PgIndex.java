/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.pg_catalog.Indexes;
import jooq.postgresql.gen.pg_catalog.PgCatalog;
import jooq.postgresql.gen.pg_catalog.tables.records.PgIndexRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgIndex extends TableImpl<PgIndexRecord> {

    private static final long serialVersionUID = -1977871832;

    /**
     * The reference instance of <code>pg_catalog.pg_index</code>
     */
    public static final PgIndex PG_INDEX = new PgIndex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgIndexRecord> getRecordType() {
        return PgIndexRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_index.indexrelid</code>.
     */
    public final TableField<PgIndexRecord, Long> INDEXRELID = createField("indexrelid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indrelid</code>.
     */
    public final TableField<PgIndexRecord, Long> INDRELID = createField("indrelid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indnatts</code>.
     */
    public final TableField<PgIndexRecord, Short> INDNATTS = createField("indnatts", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisunique</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISUNIQUE = createField("indisunique", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisprimary</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISPRIMARY = createField("indisprimary", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisexclusion</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISEXCLUSION = createField("indisexclusion", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indimmediate</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDIMMEDIATE = createField("indimmediate", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisclustered</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISCLUSTERED = createField("indisclustered", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisvalid</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISVALID = createField("indisvalid", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indcheckxmin</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDCHECKXMIN = createField("indcheckxmin", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisready</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISREADY = createField("indisready", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indislive</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISLIVE = createField("indislive", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indisreplident</code>.
     */
    public final TableField<PgIndexRecord, Boolean> INDISREPLIDENT = createField("indisreplident", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indkey</code>.
     */
    public final TableField<PgIndexRecord, Object[]> INDKEY = createField("indkey", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"int2vector\"").getArrayDataType(), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indcollation</code>.
     */
    public final TableField<PgIndexRecord, Long[]> INDCOLLATION = createField("indcollation", org.jooq.impl.SQLDataType.BIGINT.getArrayDataType(), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indclass</code>.
     */
    public final TableField<PgIndexRecord, Long[]> INDCLASS = createField("indclass", org.jooq.impl.SQLDataType.BIGINT.getArrayDataType(), this, "");

    /**
     * The column <code>pg_catalog.pg_index.indoption</code>.
     */
    public final TableField<PgIndexRecord, Object[]> INDOPTION = createField("indoption", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"int2vector\"").getArrayDataType(), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PgIndexRecord, Object> INDEXPRS = createField("indexprs", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_node_tree\""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PgIndexRecord, Object> INDPRED = createField("indpred", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_node_tree\""), this, "");

    /**
     * Create a <code>pg_catalog.pg_index</code> table reference
     */
    public PgIndex() {
        this(DSL.name("pg_index"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_index</code> table reference
     */
    public PgIndex(String alias) {
        this(DSL.name(alias), PG_INDEX);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_index</code> table reference
     */
    public PgIndex(Name alias) {
        this(alias, PG_INDEX);
    }

    private PgIndex(Name alias, Table<PgIndexRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgIndex(Name alias, Table<PgIndexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgIndex(Table<O> child, ForeignKey<O, PgIndexRecord> key) {
        super(child, key, PG_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PG_INDEX_INDEXRELID_INDEX, Indexes.PG_INDEX_INDRELID_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgIndex as(String alias) {
        return new PgIndex(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgIndex as(Name alias) {
        return new PgIndex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PgIndex rename(String name) {
        return new PgIndex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PgIndex rename(Name name) {
        return new PgIndex(name, null);
    }
}
