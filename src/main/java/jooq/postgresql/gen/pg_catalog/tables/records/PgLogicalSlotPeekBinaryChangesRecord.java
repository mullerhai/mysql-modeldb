/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables.records;


import javax.annotation.Generated;

import jooq.postgresql.gen.pg_catalog.tables.PgLogicalSlotPeekBinaryChanges;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgLogicalSlotPeekBinaryChangesRecord extends TableRecordImpl<PgLogicalSlotPeekBinaryChangesRecord> implements Record3<Object, Long, byte[]> {

    private static final long serialVersionUID = 1442249145;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setLsn(Object value) {
        set(0, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getLsn() {
        return get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_logical_slot_peek_binary_changes.xid</code>.
     */
    public void setXid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_logical_slot_peek_binary_changes.xid</code>.
     */
    public Long getXid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_logical_slot_peek_binary_changes.data</code>.
     */
    public void setData(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_logical_slot_peek_binary_changes.data</code>.
     */
    public byte[] getData() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Object, Long, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Object, Long, byte[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field1() {
        return PgLogicalSlotPeekBinaryChanges.PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES.LSN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return PgLogicalSlotPeekBinaryChanges.PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES.XID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return PgLogicalSlotPeekBinaryChanges.PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES.DATA;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component1() {
        return getLsn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getXid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getData();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value1() {
        return getLsn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getXid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getData();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public PgLogicalSlotPeekBinaryChangesRecord value1(Object value) {
        setLsn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgLogicalSlotPeekBinaryChangesRecord value2(Long value) {
        setXid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgLogicalSlotPeekBinaryChangesRecord value3(byte... value) {
        setData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgLogicalSlotPeekBinaryChangesRecord values(Object value1, Long value2, byte[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgLogicalSlotPeekBinaryChangesRecord
     */
    public PgLogicalSlotPeekBinaryChangesRecord() {
        super(PgLogicalSlotPeekBinaryChanges.PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES);
    }

    /**
     * Create a detached, initialised PgLogicalSlotPeekBinaryChangesRecord
     */
    public PgLogicalSlotPeekBinaryChangesRecord(Object lsn, Long xid, byte[] data) {
        super(PgLogicalSlotPeekBinaryChanges.PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES);

        set(0, lsn);
        set(1, xid);
        set(2, data);
    }
}
