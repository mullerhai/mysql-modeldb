/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatReplication implements Serializable {

    private static final long serialVersionUID = -900465299;

    private Integer        pid;
    private Long           usesysid;
    private String         usename;
    private String         applicationName;
    private Object         clientAddr;
    private String         clientHostname;
    private Integer        clientPort;
    private OffsetDateTime backendStart;
    private Long           backendXmin;
    private String         state;
    private Object         sentLsn;
    private Object         writeLsn;
    private Object         flushLsn;
    private Object         replayLsn;
    private Object         writeLag;
    private Object         flushLag;
    private Object         replayLag;
    private Integer        syncPriority;
    private String         syncState;

    public PgStatReplication() {}

    public PgStatReplication(PgStatReplication value) {
        this.pid = value.pid;
        this.usesysid = value.usesysid;
        this.usename = value.usename;
        this.applicationName = value.applicationName;
        this.clientAddr = value.clientAddr;
        this.clientHostname = value.clientHostname;
        this.clientPort = value.clientPort;
        this.backendStart = value.backendStart;
        this.backendXmin = value.backendXmin;
        this.state = value.state;
        this.sentLsn = value.sentLsn;
        this.writeLsn = value.writeLsn;
        this.flushLsn = value.flushLsn;
        this.replayLsn = value.replayLsn;
        this.writeLag = value.writeLag;
        this.flushLag = value.flushLag;
        this.replayLag = value.replayLag;
        this.syncPriority = value.syncPriority;
        this.syncState = value.syncState;
    }

    public PgStatReplication(
        Integer        pid,
        Long           usesysid,
        String         usename,
        String         applicationName,
        Object         clientAddr,
        String         clientHostname,
        Integer        clientPort,
        OffsetDateTime backendStart,
        Long           backendXmin,
        String         state,
        Object         sentLsn,
        Object         writeLsn,
        Object         flushLsn,
        Object         replayLsn,
        Object         writeLag,
        Object         flushLag,
        Object         replayLag,
        Integer        syncPriority,
        String         syncState
    ) {
        this.pid = pid;
        this.usesysid = usesysid;
        this.usename = usename;
        this.applicationName = applicationName;
        this.clientAddr = clientAddr;
        this.clientHostname = clientHostname;
        this.clientPort = clientPort;
        this.backendStart = backendStart;
        this.backendXmin = backendXmin;
        this.state = state;
        this.sentLsn = sentLsn;
        this.writeLsn = writeLsn;
        this.flushLsn = flushLsn;
        this.replayLsn = replayLsn;
        this.writeLag = writeLag;
        this.flushLag = flushLag;
        this.replayLag = replayLag;
        this.syncPriority = syncPriority;
        this.syncState = syncState;
    }

    public Integer getPid() {
        return this.pid;
    }

    public void setPid(Integer pid) {
        this.pid = pid;
    }

    public Long getUsesysid() {
        return this.usesysid;
    }

    public void setUsesysid(Long usesysid) {
        this.usesysid = usesysid;
    }

    public String getUsename() {
        return this.usename;
    }

    public void setUsename(String usename) {
        this.usename = usename;
    }

    public String getApplicationName() {
        return this.applicationName;
    }

    public void setApplicationName(String applicationName) {
        this.applicationName = applicationName;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getClientAddr() {
        return this.clientAddr;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setClientAddr(Object clientAddr) {
        this.clientAddr = clientAddr;
    }

    public String getClientHostname() {
        return this.clientHostname;
    }

    public void setClientHostname(String clientHostname) {
        this.clientHostname = clientHostname;
    }

    public Integer getClientPort() {
        return this.clientPort;
    }

    public void setClientPort(Integer clientPort) {
        this.clientPort = clientPort;
    }

    public OffsetDateTime getBackendStart() {
        return this.backendStart;
    }

    public void setBackendStart(OffsetDateTime backendStart) {
        this.backendStart = backendStart;
    }

    public Long getBackendXmin() {
        return this.backendXmin;
    }

    public void setBackendXmin(Long backendXmin) {
        this.backendXmin = backendXmin;
    }

    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getSentLsn() {
        return this.sentLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setSentLsn(Object sentLsn) {
        this.sentLsn = sentLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getWriteLsn() {
        return this.writeLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setWriteLsn(Object writeLsn) {
        this.writeLsn = writeLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getFlushLsn() {
        return this.flushLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setFlushLsn(Object flushLsn) {
        this.flushLsn = flushLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getReplayLsn() {
        return this.replayLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setReplayLsn(Object replayLsn) {
        this.replayLsn = replayLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getWriteLag() {
        return this.writeLag;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setWriteLag(Object writeLag) {
        this.writeLag = writeLag;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getFlushLag() {
        return this.flushLag;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setFlushLag(Object flushLag) {
        this.flushLag = flushLag;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getReplayLag() {
        return this.replayLag;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setReplayLag(Object replayLag) {
        this.replayLag = replayLag;
    }

    public Integer getSyncPriority() {
        return this.syncPriority;
    }

    public void setSyncPriority(Integer syncPriority) {
        this.syncPriority = syncPriority;
    }

    public String getSyncState() {
        return this.syncState;
    }

    public void setSyncState(String syncState) {
        this.syncState = syncState;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatReplication (");

        sb.append(pid);
        sb.append(", ").append(usesysid);
        sb.append(", ").append(usename);
        sb.append(", ").append(applicationName);
        sb.append(", ").append(clientAddr);
        sb.append(", ").append(clientHostname);
        sb.append(", ").append(clientPort);
        sb.append(", ").append(backendStart);
        sb.append(", ").append(backendXmin);
        sb.append(", ").append(state);
        sb.append(", ").append(sentLsn);
        sb.append(", ").append(writeLsn);
        sb.append(", ").append(flushLsn);
        sb.append(", ").append(replayLsn);
        sb.append(", ").append(writeLag);
        sb.append(", ").append(flushLag);
        sb.append(", ").append(replayLag);
        sb.append(", ").append(syncPriority);
        sb.append(", ").append(syncState);

        sb.append(")");
        return sb.toString();
    }
}
