/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgReplicationSlots implements Serializable {

    private static final long serialVersionUID = 2350230;

    private String  slotName;
    private String  plugin;
    private String  slotType;
    private Long    datoid;
    private String  database;
    private Boolean temporary;
    private Boolean active;
    private Integer activePid;
    private Long    xmin;
    private Long    catalogXmin;
    private Object  restartLsn;
    private Object  confirmedFlushLsn;

    public PgReplicationSlots() {}

    public PgReplicationSlots(PgReplicationSlots value) {
        this.slotName = value.slotName;
        this.plugin = value.plugin;
        this.slotType = value.slotType;
        this.datoid = value.datoid;
        this.database = value.database;
        this.temporary = value.temporary;
        this.active = value.active;
        this.activePid = value.activePid;
        this.xmin = value.xmin;
        this.catalogXmin = value.catalogXmin;
        this.restartLsn = value.restartLsn;
        this.confirmedFlushLsn = value.confirmedFlushLsn;
    }

    public PgReplicationSlots(
        String  slotName,
        String  plugin,
        String  slotType,
        Long    datoid,
        String  database,
        Boolean temporary,
        Boolean active,
        Integer activePid,
        Long    xmin,
        Long    catalogXmin,
        Object  restartLsn,
        Object  confirmedFlushLsn
    ) {
        this.slotName = slotName;
        this.plugin = plugin;
        this.slotType = slotType;
        this.datoid = datoid;
        this.database = database;
        this.temporary = temporary;
        this.active = active;
        this.activePid = activePid;
        this.xmin = xmin;
        this.catalogXmin = catalogXmin;
        this.restartLsn = restartLsn;
        this.confirmedFlushLsn = confirmedFlushLsn;
    }

    public String getSlotName() {
        return this.slotName;
    }

    public void setSlotName(String slotName) {
        this.slotName = slotName;
    }

    public String getPlugin() {
        return this.plugin;
    }

    public void setPlugin(String plugin) {
        this.plugin = plugin;
    }

    public String getSlotType() {
        return this.slotType;
    }

    public void setSlotType(String slotType) {
        this.slotType = slotType;
    }

    public Long getDatoid() {
        return this.datoid;
    }

    public void setDatoid(Long datoid) {
        this.datoid = datoid;
    }

    public String getDatabase() {
        return this.database;
    }

    public void setDatabase(String database) {
        this.database = database;
    }

    public Boolean getTemporary() {
        return this.temporary;
    }

    public void setTemporary(Boolean temporary) {
        this.temporary = temporary;
    }

    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Integer getActivePid() {
        return this.activePid;
    }

    public void setActivePid(Integer activePid) {
        this.activePid = activePid;
    }

    public Long getXmin() {
        return this.xmin;
    }

    public void setXmin(Long xmin) {
        this.xmin = xmin;
    }

    public Long getCatalogXmin() {
        return this.catalogXmin;
    }

    public void setCatalogXmin(Long catalogXmin) {
        this.catalogXmin = catalogXmin;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getRestartLsn() {
        return this.restartLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setRestartLsn(Object restartLsn) {
        this.restartLsn = restartLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getConfirmedFlushLsn() {
        return this.confirmedFlushLsn;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setConfirmedFlushLsn(Object confirmedFlushLsn) {
        this.confirmedFlushLsn = confirmedFlushLsn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgReplicationSlots (");

        sb.append(slotName);
        sb.append(", ").append(plugin);
        sb.append(", ").append(slotType);
        sb.append(", ").append(datoid);
        sb.append(", ").append(database);
        sb.append(", ").append(temporary);
        sb.append(", ").append(active);
        sb.append(", ").append(activePid);
        sb.append(", ").append(xmin);
        sb.append(", ").append(catalogXmin);
        sb.append(", ").append(restartLsn);
        sb.append(", ").append(confirmedFlushLsn);

        sb.append(")");
        return sb.toString();
    }
}
