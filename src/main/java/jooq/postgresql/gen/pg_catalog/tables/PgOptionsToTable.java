/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables;


import javax.annotation.Generated;

import jooq.postgresql.gen.pg_catalog.PgCatalog;
import jooq.postgresql.gen.pg_catalog.tables.records.PgOptionsToTableRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgOptionsToTable extends TableImpl<PgOptionsToTableRecord> {

    private static final long serialVersionUID = 2128693709;

    /**
     * The reference instance of <code>pg_catalog.pg_options_to_table</code>
     */
    public static final PgOptionsToTable PG_OPTIONS_TO_TABLE = new PgOptionsToTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgOptionsToTableRecord> getRecordType() {
        return PgOptionsToTableRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_options_to_table.option_name</code>.
     */
    public final TableField<PgOptionsToTableRecord, String> OPTION_NAME = createField("option_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_options_to_table.option_value</code>.
     */
    public final TableField<PgOptionsToTableRecord, String> OPTION_VALUE = createField("option_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>pg_catalog.pg_options_to_table</code> table reference
     */
    public PgOptionsToTable() {
        this(DSL.name("pg_options_to_table"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_options_to_table</code> table reference
     */
    public PgOptionsToTable(String alias) {
        this(DSL.name(alias), PG_OPTIONS_TO_TABLE);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_options_to_table</code> table reference
     */
    public PgOptionsToTable(Name alias) {
        this(alias, PG_OPTIONS_TO_TABLE);
    }

    private PgOptionsToTable(Name alias, Table<PgOptionsToTableRecord> aliased) {
        this(alias, aliased, new Field[1]);
    }

    private PgOptionsToTable(Name alias, Table<PgOptionsToTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgOptionsToTable(Table<O> child, ForeignKey<O, PgOptionsToTableRecord> key) {
        super(child, key, PG_OPTIONS_TO_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgOptionsToTable as(String alias) {
        return new PgOptionsToTable(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgOptionsToTable as(Name alias) {
        return new PgOptionsToTable(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgOptionsToTable rename(String name) {
        return new PgOptionsToTable(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgOptionsToTable rename(Name name) {
        return new PgOptionsToTable(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public PgOptionsToTable call(String[] optionsArray) {
        return new PgOptionsToTable(DSL.name(getName()), null, new Field[] { 
              DSL.val(optionsArray, org.jooq.impl.SQLDataType.CLOB.getArrayDataType())
        });
    }

    /**
     * Call this table-valued function
     */
    public PgOptionsToTable call(Field<String[]> optionsArray) {
        return new PgOptionsToTable(DSL.name(getName()), null, new Field[] { 
              optionsArray
        });
    }
}
