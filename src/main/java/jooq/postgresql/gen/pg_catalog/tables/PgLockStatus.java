/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.pg_catalog.tables;


import javax.annotation.Generated;

import jooq.postgresql.gen.pg_catalog.PgCatalog;
import jooq.postgresql.gen.pg_catalog.tables.records.PgLockStatusRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgLockStatus extends TableImpl<PgLockStatusRecord> {

    private static final long serialVersionUID = 677900213;

    /**
     * The reference instance of <code>pg_catalog.pg_lock_status</code>
     */
    public static final PgLockStatus PG_LOCK_STATUS = new PgLockStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgLockStatusRecord> getRecordType() {
        return PgLockStatusRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_lock_status.locktype</code>.
     */
    public final TableField<PgLockStatusRecord, String> LOCKTYPE = createField("locktype", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.database</code>.
     */
    public final TableField<PgLockStatusRecord, Long> DATABASE = createField("database", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.relation</code>.
     */
    public final TableField<PgLockStatusRecord, Long> RELATION = createField("relation", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.page</code>.
     */
    public final TableField<PgLockStatusRecord, Integer> PAGE = createField("page", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.tuple</code>.
     */
    public final TableField<PgLockStatusRecord, Short> TUPLE = createField("tuple", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.virtualxid</code>.
     */
    public final TableField<PgLockStatusRecord, String> VIRTUALXID = createField("virtualxid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.transactionid</code>.
     */
    public final TableField<PgLockStatusRecord, Long> TRANSACTIONID = createField("transactionid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.classid</code>.
     */
    public final TableField<PgLockStatusRecord, Long> CLASSID = createField("classid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.objid</code>.
     */
    public final TableField<PgLockStatusRecord, Long> OBJID = createField("objid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.objsubid</code>.
     */
    public final TableField<PgLockStatusRecord, Short> OBJSUBID = createField("objsubid", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.virtualtransaction</code>.
     */
    public final TableField<PgLockStatusRecord, String> VIRTUALTRANSACTION = createField("virtualtransaction", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.pid</code>.
     */
    public final TableField<PgLockStatusRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.mode</code>.
     */
    public final TableField<PgLockStatusRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.granted</code>.
     */
    public final TableField<PgLockStatusRecord, Boolean> GRANTED = createField("granted", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>pg_catalog.pg_lock_status.fastpath</code>.
     */
    public final TableField<PgLockStatusRecord, Boolean> FASTPATH = createField("fastpath", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>pg_catalog.pg_lock_status</code> table reference
     */
    public PgLockStatus() {
        this(DSL.name("pg_lock_status"), null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_lock_status</code> table reference
     */
    public PgLockStatus(String alias) {
        this(DSL.name(alias), PG_LOCK_STATUS);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_lock_status</code> table reference
     */
    public PgLockStatus(Name alias) {
        this(alias, PG_LOCK_STATUS);
    }

    private PgLockStatus(Name alias, Table<PgLockStatusRecord> aliased) {
        this(alias, aliased, new Field[0]);
    }

    private PgLockStatus(Name alias, Table<PgLockStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PgLockStatus(Table<O> child, ForeignKey<O, PgLockStatusRecord> key) {
        super(child, key, PG_LOCK_STATUS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgLockStatus as(String alias) {
        return new PgLockStatus(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgLockStatus as(Name alias) {
        return new PgLockStatus(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgLockStatus rename(String name) {
        return new PgLockStatus(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public PgLockStatus rename(Name name) {
        return new PgLockStatus(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public PgLockStatus call() {
        return new PgLockStatus(DSL.name(getName()), null, new Field[] { 
        });
    }
}
