/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.Gridsearchcrossvalidationevent;
import jooq.postgresql.gen.public_.tables.records.GridsearchcrossvalidationeventRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GridsearchcrossvalidationeventDao extends DAOImpl<GridsearchcrossvalidationeventRecord, jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent, Integer> {

    /**
     * Create a new GridsearchcrossvalidationeventDao without any configuration
     */
    public GridsearchcrossvalidationeventDao() {
        super(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent.class);
    }

    /**
     * Create a new GridsearchcrossvalidationeventDao with an attached configuration
     */
    public GridsearchcrossvalidationeventDao(Configuration configuration) {
        super(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent> fetchById(Integer... values) {
        return fetch(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent fetchOneById(Integer value) {
        return fetchOne(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.ID, value);
    }

    /**
     * Fetch records that have <code>numfolds IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent> fetchByNumfolds(Integer... values) {
        return fetch(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.NUMFOLDS, values);
    }

    /**
     * Fetch records that have <code>best IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent> fetchByBest(Integer... values) {
        return fetch(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.BEST, values);
    }

    /**
     * Fetch records that have <code>experimentrun IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridsearchcrossvalidationevent> fetchByExperimentrun(Integer... values) {
        return fetch(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.EXPERIMENTRUN, values);
    }
}
