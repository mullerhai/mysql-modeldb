/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables.records;


import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.ExperimentRunView;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentRunViewRecord extends TableRecordImpl<ExperimentRunViewRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = -48989544;

    /**
     * Setter for <code>public.experiment_run_view.experimentrunid</code>.
     */
    public void setExperimentrunid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.experiment_run_view.experimentrunid</code>.
     */
    public Integer getExperimentrunid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.experiment_run_view.experimentid</code>.
     */
    public void setExperimentid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.experiment_run_view.experimentid</code>.
     */
    public Integer getExperimentid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.experiment_run_view.projectid</code>.
     */
    public void setProjectid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.experiment_run_view.projectid</code>.
     */
    public Integer getProjectid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ExperimentRunView.EXPERIMENT_RUN_VIEW.EXPERIMENTRUNID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ExperimentRunView.EXPERIMENT_RUN_VIEW.EXPERIMENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ExperimentRunView.EXPERIMENT_RUN_VIEW.PROJECTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getExperimentrunid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getExperimentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getExperimentrunid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getExperimentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperimentRunViewRecord value1(Integer value) {
        setExperimentrunid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperimentRunViewRecord value2(Integer value) {
        setExperimentid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperimentRunViewRecord value3(Integer value) {
        setProjectid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperimentRunViewRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExperimentRunViewRecord
     */
    public ExperimentRunViewRecord() {
        super(ExperimentRunView.EXPERIMENT_RUN_VIEW);
    }

    /**
     * Create a detached, initialised ExperimentRunViewRecord
     */
    public ExperimentRunViewRecord(Integer experimentrunid, Integer experimentid, Integer projectid) {
        super(ExperimentRunView.EXPERIMENT_RUN_VIEW);

        set(0, experimentrunid);
        set(1, experimentid);
        set(2, projectid);
    }
}
