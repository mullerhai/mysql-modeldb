/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.Experiment;
import jooq.postgresql.gen.public_.tables.records.ExperimentRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentDao extends DAOImpl<ExperimentRecord, jooq.postgresql.gen.public_.tables.pojos.Experiment, Integer> {

    /**
     * Create a new ExperimentDao without any configuration
     */
    public ExperimentDao() {
        super(Experiment.EXPERIMENT, jooq.postgresql.gen.public_.tables.pojos.Experiment.class);
    }

    /**
     * Create a new ExperimentDao with an attached configuration
     */
    public ExperimentDao(Configuration configuration) {
        super(Experiment.EXPERIMENT, jooq.postgresql.gen.public_.tables.pojos.Experiment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.postgresql.gen.public_.tables.pojos.Experiment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Experiment> fetchById(Integer... values) {
        return fetch(Experiment.EXPERIMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.postgresql.gen.public_.tables.pojos.Experiment fetchOneById(Integer value) {
        return fetchOne(Experiment.EXPERIMENT.ID, value);
    }

    /**
     * Fetch records that have <code>project IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Experiment> fetchByProject(Integer... values) {
        return fetch(Experiment.EXPERIMENT.PROJECT, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Experiment> fetchByName(String... values) {
        return fetch(Experiment.EXPERIMENT.NAME, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Experiment> fetchByDescription(String... values) {
        return fetch(Experiment.EXPERIMENT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Experiment> fetchByCreated(Timestamp... values) {
        return fetch(Experiment.EXPERIMENT.CREATED, values);
    }
}
