/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.Gridcellcrossvalidation;
import jooq.postgresql.gen.public_.tables.records.GridcellcrossvalidationRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GridcellcrossvalidationDao extends DAOImpl<GridcellcrossvalidationRecord, jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation, Integer> {

    /**
     * Create a new GridcellcrossvalidationDao without any configuration
     */
    public GridcellcrossvalidationDao() {
        super(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation.class);
    }

    /**
     * Create a new GridcellcrossvalidationDao with an attached configuration
     */
    public GridcellcrossvalidationDao(Configuration configuration) {
        super(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation> fetchById(Integer... values) {
        return fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation fetchOneById(Integer value) {
        return fetchOne(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID, value);
    }

    /**
     * Fetch records that have <code>gridsearch IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation> fetchByGridsearch(Integer... values) {
        return fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.GRIDSEARCH, values);
    }

    /**
     * Fetch records that have <code>crossvalidation IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation> fetchByCrossvalidation(Integer... values) {
        return fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.CROSSVALIDATION, values);
    }

    /**
     * Fetch records that have <code>experimentrun IN (values)</code>
     */
    public List<jooq.postgresql.gen.public_.tables.pojos.Gridcellcrossvalidation> fetchByExperimentrun(Integer... values) {
        return fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.EXPERIMENTRUN, values);
    }
}
