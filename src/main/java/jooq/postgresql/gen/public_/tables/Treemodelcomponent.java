/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.public_.Indexes;
import jooq.postgresql.gen.public_.Keys;
import jooq.postgresql.gen.public_.Public;
import jooq.postgresql.gen.public_.tables.records.TreemodelcomponentRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Treemodelcomponent extends TableImpl<TreemodelcomponentRecord> {

    private static final long serialVersionUID = 898019823;

    /**
     * The reference instance of <code>public.treemodelcomponent</code>
     */
    public static final Treemodelcomponent TREEMODELCOMPONENT = new Treemodelcomponent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TreemodelcomponentRecord> getRecordType() {
        return TreemodelcomponentRecord.class;
    }

    /**
     * The column <code>public.treemodelcomponent.id</code>.
     */
    public final TableField<TreemodelcomponentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('treemodelcomponent_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.treemodelcomponent.model</code>.
     */
    public final TableField<TreemodelcomponentRecord, Integer> MODEL = createField("model", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.treemodelcomponent.componentindex</code>.
     */
    public final TableField<TreemodelcomponentRecord, Integer> COMPONENTINDEX = createField("componentindex", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.treemodelcomponent.componentweight</code>.
     */
    public final TableField<TreemodelcomponentRecord, Double> COMPONENTWEIGHT = createField("componentweight", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.treemodelcomponent.rootnode</code>.
     */
    public final TableField<TreemodelcomponentRecord, Integer> ROOTNODE = createField("rootnode", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.treemodelcomponent</code> table reference
     */
    public Treemodelcomponent() {
        this(DSL.name("treemodelcomponent"), null);
    }

    /**
     * Create an aliased <code>public.treemodelcomponent</code> table reference
     */
    public Treemodelcomponent(String alias) {
        this(DSL.name(alias), TREEMODELCOMPONENT);
    }

    /**
     * Create an aliased <code>public.treemodelcomponent</code> table reference
     */
    public Treemodelcomponent(Name alias) {
        this(alias, TREEMODELCOMPONENT);
    }

    private Treemodelcomponent(Name alias, Table<TreemodelcomponentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Treemodelcomponent(Name alias, Table<TreemodelcomponentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Treemodelcomponent(Table<O> child, ForeignKey<O, TreemodelcomponentRecord> key) {
        super(child, key, TREEMODELCOMPONENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TREEMODELCOMPONENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TreemodelcomponentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TREEMODELCOMPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TreemodelcomponentRecord> getPrimaryKey() {
        return Keys.TREEMODELCOMPONENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TreemodelcomponentRecord>> getKeys() {
        return Arrays.<UniqueKey<TreemodelcomponentRecord>>asList(Keys.TREEMODELCOMPONENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TreemodelcomponentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TreemodelcomponentRecord, ?>>asList(Keys.TREEMODELCOMPONENT__TREEMODELCOMPONENT_MODEL_FKEY, Keys.TREEMODELCOMPONENT__TREEMODELCOMPONENT_ROOTNODE_FKEY);
    }

    public Transformer transformer() {
        return new Transformer(this, Keys.TREEMODELCOMPONENT__TREEMODELCOMPONENT_MODEL_FKEY);
    }

    public Treenode treenode() {
        return new Treenode(this, Keys.TREEMODELCOMPONENT__TREEMODELCOMPONENT_ROOTNODE_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Treemodelcomponent as(String alias) {
        return new Treemodelcomponent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Treemodelcomponent as(Name alias) {
        return new Treemodelcomponent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Treemodelcomponent rename(String name) {
        return new Treemodelcomponent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Treemodelcomponent rename(Name name) {
        return new Treemodelcomponent(name, null);
    }
}
