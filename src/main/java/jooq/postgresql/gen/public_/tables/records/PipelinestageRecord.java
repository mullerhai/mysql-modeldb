/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables.records;


import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.Pipelinestage;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PipelinestageRecord extends UpdatableRecordImpl<PipelinestageRecord> implements Record6<Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1786904115;

    /**
     * Setter for <code>public.pipelinestage.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pipelinestage.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.pipelinestage.pipelinefitevent</code>.
     */
    public void setPipelinefitevent(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pipelinestage.pipelinefitevent</code>.
     */
    public Integer getPipelinefitevent() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.pipelinestage.transformorfitevent</code>.
     */
    public void setTransformorfitevent(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pipelinestage.transformorfitevent</code>.
     */
    public Integer getTransformorfitevent() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.pipelinestage.isfit</code>.
     */
    public void setIsfit(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.pipelinestage.isfit</code>.
     */
    public Integer getIsfit() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.pipelinestage.stagenumber</code>.
     */
    public void setStagenumber(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.pipelinestage.stagenumber</code>.
     */
    public Integer getStagenumber() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.pipelinestage.experimentrun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.pipelinestage.experimentrun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Pipelinestage.PIPELINESTAGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Pipelinestage.PIPELINESTAGE.PIPELINEFITEVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Pipelinestage.PIPELINESTAGE.TRANSFORMORFITEVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Pipelinestage.PIPELINESTAGE.ISFIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Pipelinestage.PIPELINESTAGE.STAGENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Pipelinestage.PIPELINESTAGE.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPipelinefitevent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTransformorfitevent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getIsfit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getStagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPipelinefitevent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTransformorfitevent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getIsfit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getStagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value2(Integer value) {
        setPipelinefitevent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value3(Integer value) {
        setTransformorfitevent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value4(Integer value) {
        setIsfit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value5(Integer value) {
        setStagenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord value6(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelinestageRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PipelinestageRecord
     */
    public PipelinestageRecord() {
        super(Pipelinestage.PIPELINESTAGE);
    }

    /**
     * Create a detached, initialised PipelinestageRecord
     */
    public PipelinestageRecord(Integer id, Integer pipelinefitevent, Integer transformorfitevent, Integer isfit, Integer stagenumber, Integer experimentrun) {
        super(Pipelinestage.PIPELINESTAGE);

        set(0, id);
        set(1, pipelinefitevent);
        set(2, transformorfitevent);
        set(3, isfit);
        set(4, stagenumber);
        set(5, experimentrun);
    }
}
