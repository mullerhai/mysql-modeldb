/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.postgresql.gen.public_.Indexes;
import jooq.postgresql.gen.public_.Keys;
import jooq.postgresql.gen.public_.Public;
import jooq.postgresql.gen.public_.tables.records.MetadatakvRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Metadatakv extends TableImpl<MetadatakvRecord> {

    private static final long serialVersionUID = -50437695;

    /**
     * The reference instance of <code>public.metadatakv</code>
     */
    public static final Metadatakv METADATAKV = new Metadatakv();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetadatakvRecord> getRecordType() {
        return MetadatakvRecord.class;
    }

    /**
     * The column <code>public.metadatakv.id</code>.
     */
    public final TableField<MetadatakvRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('metadatakv_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.metadatakv.key</code>.
     */
    public final TableField<MetadatakvRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.metadatakv.value</code>.
     */
    public final TableField<MetadatakvRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.metadatakv.valuetype</code>.
     */
    public final TableField<MetadatakvRecord, String> VALUETYPE = createField("valuetype", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.metadatakv</code> table reference
     */
    public Metadatakv() {
        this(DSL.name("metadatakv"), null);
    }

    /**
     * Create an aliased <code>public.metadatakv</code> table reference
     */
    public Metadatakv(String alias) {
        this(DSL.name(alias), METADATAKV);
    }

    /**
     * Create an aliased <code>public.metadatakv</code> table reference
     */
    public Metadatakv(Name alias) {
        this(alias, METADATAKV);
    }

    private Metadatakv(Name alias, Table<MetadatakvRecord> aliased) {
        this(alias, aliased, null);
    }

    private Metadatakv(Name alias, Table<MetadatakvRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Metadatakv(Table<O> child, ForeignKey<O, MetadatakvRecord> key) {
        super(child, key, METADATAKV);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.METADATAKV_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MetadatakvRecord, Integer> getIdentity() {
        return Keys.IDENTITY_METADATAKV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetadatakvRecord> getPrimaryKey() {
        return Keys.METADATAKV_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetadatakvRecord>> getKeys() {
        return Arrays.<UniqueKey<MetadatakvRecord>>asList(Keys.METADATAKV_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Metadatakv as(String alias) {
        return new Metadatakv(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Metadatakv as(Name alias) {
        return new Metadatakv(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Metadatakv rename(String name) {
        return new Metadatakv(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Metadatakv rename(Name name) {
        return new Metadatakv(name, null);
    }
}
