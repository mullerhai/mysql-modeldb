/*
 * This file is generated by jOOQ.
 */
package jooq.postgresql.gen.public_;


import javax.annotation.Generated;

import jooq.postgresql.gen.public_.tables.Annotation;
import jooq.postgresql.gen.public_.tables.Annotationfragment;
import jooq.postgresql.gen.public_.tables.Crossvalidationevent;
import jooq.postgresql.gen.public_.tables.Crossvalidationfold;
import jooq.postgresql.gen.public_.tables.Dataframe;
import jooq.postgresql.gen.public_.tables.Dataframecolumn;
import jooq.postgresql.gen.public_.tables.Dataframemetadata;
import jooq.postgresql.gen.public_.tables.Dataframesplit;
import jooq.postgresql.gen.public_.tables.Event;
import jooq.postgresql.gen.public_.tables.Experiment;
import jooq.postgresql.gen.public_.tables.Experimentrun;
import jooq.postgresql.gen.public_.tables.Feature;
import jooq.postgresql.gen.public_.tables.Fitevent;
import jooq.postgresql.gen.public_.tables.Gridcellcrossvalidation;
import jooq.postgresql.gen.public_.tables.Gridsearchcrossvalidationevent;
import jooq.postgresql.gen.public_.tables.Hyperparameter;
import jooq.postgresql.gen.public_.tables.Linearmodel;
import jooq.postgresql.gen.public_.tables.Linearmodelterm;
import jooq.postgresql.gen.public_.tables.Metadatakv;
import jooq.postgresql.gen.public_.tables.Metricevent;
import jooq.postgresql.gen.public_.tables.Modelobjectivehistory;
import jooq.postgresql.gen.public_.tables.Pipelinestage;
import jooq.postgresql.gen.public_.tables.Project;
import jooq.postgresql.gen.public_.tables.Randomsplitevent;
import jooq.postgresql.gen.public_.tables.Transformer;
import jooq.postgresql.gen.public_.tables.Transformerspec;
import jooq.postgresql.gen.public_.tables.Transformevent;
import jooq.postgresql.gen.public_.tables.Treelink;
import jooq.postgresql.gen.public_.tables.Treemodel;
import jooq.postgresql.gen.public_.tables.Treemodelcomponent;
import jooq.postgresql.gen.public_.tables.Treenode;
import jooq.postgresql.gen.public_.tables.records.AnnotationRecord;
import jooq.postgresql.gen.public_.tables.records.AnnotationfragmentRecord;
import jooq.postgresql.gen.public_.tables.records.CrossvalidationeventRecord;
import jooq.postgresql.gen.public_.tables.records.CrossvalidationfoldRecord;
import jooq.postgresql.gen.public_.tables.records.DataframeRecord;
import jooq.postgresql.gen.public_.tables.records.DataframecolumnRecord;
import jooq.postgresql.gen.public_.tables.records.DataframemetadataRecord;
import jooq.postgresql.gen.public_.tables.records.DataframesplitRecord;
import jooq.postgresql.gen.public_.tables.records.EventRecord;
import jooq.postgresql.gen.public_.tables.records.ExperimentRecord;
import jooq.postgresql.gen.public_.tables.records.ExperimentrunRecord;
import jooq.postgresql.gen.public_.tables.records.FeatureRecord;
import jooq.postgresql.gen.public_.tables.records.FiteventRecord;
import jooq.postgresql.gen.public_.tables.records.GridcellcrossvalidationRecord;
import jooq.postgresql.gen.public_.tables.records.GridsearchcrossvalidationeventRecord;
import jooq.postgresql.gen.public_.tables.records.HyperparameterRecord;
import jooq.postgresql.gen.public_.tables.records.LinearmodelRecord;
import jooq.postgresql.gen.public_.tables.records.LinearmodeltermRecord;
import jooq.postgresql.gen.public_.tables.records.MetadatakvRecord;
import jooq.postgresql.gen.public_.tables.records.MetriceventRecord;
import jooq.postgresql.gen.public_.tables.records.ModelobjectivehistoryRecord;
import jooq.postgresql.gen.public_.tables.records.PipelinestageRecord;
import jooq.postgresql.gen.public_.tables.records.ProjectRecord;
import jooq.postgresql.gen.public_.tables.records.RandomspliteventRecord;
import jooq.postgresql.gen.public_.tables.records.TransformerRecord;
import jooq.postgresql.gen.public_.tables.records.TransformerspecRecord;
import jooq.postgresql.gen.public_.tables.records.TransformeventRecord;
import jooq.postgresql.gen.public_.tables.records.TreelinkRecord;
import jooq.postgresql.gen.public_.tables.records.TreemodelRecord;
import jooq.postgresql.gen.public_.tables.records.TreemodelcomponentRecord;
import jooq.postgresql.gen.public_.tables.records.TreenodeRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AnnotationRecord, Integer> IDENTITY_ANNOTATION = Identities0.IDENTITY_ANNOTATION;
    public static final Identity<AnnotationfragmentRecord, Integer> IDENTITY_ANNOTATIONFRAGMENT = Identities0.IDENTITY_ANNOTATIONFRAGMENT;
    public static final Identity<CrossvalidationeventRecord, Integer> IDENTITY_CROSSVALIDATIONEVENT = Identities0.IDENTITY_CROSSVALIDATIONEVENT;
    public static final Identity<CrossvalidationfoldRecord, Integer> IDENTITY_CROSSVALIDATIONFOLD = Identities0.IDENTITY_CROSSVALIDATIONFOLD;
    public static final Identity<DataframeRecord, Integer> IDENTITY_DATAFRAME = Identities0.IDENTITY_DATAFRAME;
    public static final Identity<DataframecolumnRecord, Integer> IDENTITY_DATAFRAMECOLUMN = Identities0.IDENTITY_DATAFRAMECOLUMN;
    public static final Identity<DataframemetadataRecord, Integer> IDENTITY_DATAFRAMEMETADATA = Identities0.IDENTITY_DATAFRAMEMETADATA;
    public static final Identity<DataframesplitRecord, Integer> IDENTITY_DATAFRAMESPLIT = Identities0.IDENTITY_DATAFRAMESPLIT;
    public static final Identity<EventRecord, Integer> IDENTITY_EVENT = Identities0.IDENTITY_EVENT;
    public static final Identity<ExperimentRecord, Integer> IDENTITY_EXPERIMENT = Identities0.IDENTITY_EXPERIMENT;
    public static final Identity<ExperimentrunRecord, Integer> IDENTITY_EXPERIMENTRUN = Identities0.IDENTITY_EXPERIMENTRUN;
    public static final Identity<FeatureRecord, Integer> IDENTITY_FEATURE = Identities0.IDENTITY_FEATURE;
    public static final Identity<FiteventRecord, Integer> IDENTITY_FITEVENT = Identities0.IDENTITY_FITEVENT;
    public static final Identity<GridcellcrossvalidationRecord, Integer> IDENTITY_GRIDCELLCROSSVALIDATION = Identities0.IDENTITY_GRIDCELLCROSSVALIDATION;
    public static final Identity<GridsearchcrossvalidationeventRecord, Integer> IDENTITY_GRIDSEARCHCROSSVALIDATIONEVENT = Identities0.IDENTITY_GRIDSEARCHCROSSVALIDATIONEVENT;
    public static final Identity<HyperparameterRecord, Integer> IDENTITY_HYPERPARAMETER = Identities0.IDENTITY_HYPERPARAMETER;
    public static final Identity<LinearmodelRecord, Integer> IDENTITY_LINEARMODEL = Identities0.IDENTITY_LINEARMODEL;
    public static final Identity<LinearmodeltermRecord, Integer> IDENTITY_LINEARMODELTERM = Identities0.IDENTITY_LINEARMODELTERM;
    public static final Identity<MetadatakvRecord, Integer> IDENTITY_METADATAKV = Identities0.IDENTITY_METADATAKV;
    public static final Identity<MetriceventRecord, Integer> IDENTITY_METRICEVENT = Identities0.IDENTITY_METRICEVENT;
    public static final Identity<ModelobjectivehistoryRecord, Integer> IDENTITY_MODELOBJECTIVEHISTORY = Identities0.IDENTITY_MODELOBJECTIVEHISTORY;
    public static final Identity<PipelinestageRecord, Integer> IDENTITY_PIPELINESTAGE = Identities0.IDENTITY_PIPELINESTAGE;
    public static final Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Identities0.IDENTITY_PROJECT;
    public static final Identity<RandomspliteventRecord, Integer> IDENTITY_RANDOMSPLITEVENT = Identities0.IDENTITY_RANDOMSPLITEVENT;
    public static final Identity<TransformerRecord, Integer> IDENTITY_TRANSFORMER = Identities0.IDENTITY_TRANSFORMER;
    public static final Identity<TransformerspecRecord, Integer> IDENTITY_TRANSFORMERSPEC = Identities0.IDENTITY_TRANSFORMERSPEC;
    public static final Identity<TransformeventRecord, Integer> IDENTITY_TRANSFORMEVENT = Identities0.IDENTITY_TRANSFORMEVENT;
    public static final Identity<TreelinkRecord, Integer> IDENTITY_TREELINK = Identities0.IDENTITY_TREELINK;
    public static final Identity<TreemodelRecord, Integer> IDENTITY_TREEMODEL = Identities0.IDENTITY_TREEMODEL;
    public static final Identity<TreemodelcomponentRecord, Integer> IDENTITY_TREEMODELCOMPONENT = Identities0.IDENTITY_TREEMODELCOMPONENT;
    public static final Identity<TreenodeRecord, Integer> IDENTITY_TREENODE = Identities0.IDENTITY_TREENODE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnnotationRecord> ANNOTATION_PKEY = UniqueKeys0.ANNOTATION_PKEY;
    public static final UniqueKey<AnnotationfragmentRecord> ANNOTATIONFRAGMENT_PKEY = UniqueKeys0.ANNOTATIONFRAGMENT_PKEY;
    public static final UniqueKey<CrossvalidationeventRecord> CROSSVALIDATIONEVENT_PKEY = UniqueKeys0.CROSSVALIDATIONEVENT_PKEY;
    public static final UniqueKey<CrossvalidationfoldRecord> CROSSVALIDATIONFOLD_PKEY = UniqueKeys0.CROSSVALIDATIONFOLD_PKEY;
    public static final UniqueKey<DataframeRecord> DATAFRAME_PKEY = UniqueKeys0.DATAFRAME_PKEY;
    public static final UniqueKey<DataframecolumnRecord> DATAFRAMECOLUMN_PKEY = UniqueKeys0.DATAFRAMECOLUMN_PKEY;
    public static final UniqueKey<DataframemetadataRecord> DATAFRAMEMETADATA_PKEY = UniqueKeys0.DATAFRAMEMETADATA_PKEY;
    public static final UniqueKey<DataframesplitRecord> DATAFRAMESPLIT_PKEY = UniqueKeys0.DATAFRAMESPLIT_PKEY;
    public static final UniqueKey<EventRecord> EVENT_PKEY = UniqueKeys0.EVENT_PKEY;
    public static final UniqueKey<ExperimentRecord> EXPERIMENT_PKEY = UniqueKeys0.EXPERIMENT_PKEY;
    public static final UniqueKey<ExperimentrunRecord> EXPERIMENTRUN_PKEY = UniqueKeys0.EXPERIMENTRUN_PKEY;
    public static final UniqueKey<FeatureRecord> FEATURE_PKEY = UniqueKeys0.FEATURE_PKEY;
    public static final UniqueKey<FiteventRecord> FITEVENT_PKEY = UniqueKeys0.FITEVENT_PKEY;
    public static final UniqueKey<GridcellcrossvalidationRecord> GRIDCELLCROSSVALIDATION_PKEY = UniqueKeys0.GRIDCELLCROSSVALIDATION_PKEY;
    public static final UniqueKey<GridsearchcrossvalidationeventRecord> GRIDSEARCHCROSSVALIDATIONEVENT_PKEY = UniqueKeys0.GRIDSEARCHCROSSVALIDATIONEVENT_PKEY;
    public static final UniqueKey<HyperparameterRecord> HYPERPARAMETER_PKEY = UniqueKeys0.HYPERPARAMETER_PKEY;
    public static final UniqueKey<LinearmodelRecord> LINEARMODEL_PKEY = UniqueKeys0.LINEARMODEL_PKEY;
    public static final UniqueKey<LinearmodeltermRecord> LINEARMODELTERM_PKEY = UniqueKeys0.LINEARMODELTERM_PKEY;
    public static final UniqueKey<MetadatakvRecord> METADATAKV_PKEY = UniqueKeys0.METADATAKV_PKEY;
    public static final UniqueKey<MetriceventRecord> METRICEVENT_PKEY = UniqueKeys0.METRICEVENT_PKEY;
    public static final UniqueKey<ModelobjectivehistoryRecord> MODELOBJECTIVEHISTORY_PKEY = UniqueKeys0.MODELOBJECTIVEHISTORY_PKEY;
    public static final UniqueKey<PipelinestageRecord> PIPELINESTAGE_PKEY = UniqueKeys0.PIPELINESTAGE_PKEY;
    public static final UniqueKey<ProjectRecord> PROJECT_PKEY = UniqueKeys0.PROJECT_PKEY;
    public static final UniqueKey<RandomspliteventRecord> RANDOMSPLITEVENT_PKEY = UniqueKeys0.RANDOMSPLITEVENT_PKEY;
    public static final UniqueKey<TransformerRecord> TRANSFORMER_PKEY = UniqueKeys0.TRANSFORMER_PKEY;
    public static final UniqueKey<TransformerspecRecord> TRANSFORMERSPEC_PKEY = UniqueKeys0.TRANSFORMERSPEC_PKEY;
    public static final UniqueKey<TransformeventRecord> TRANSFORMEVENT_PKEY = UniqueKeys0.TRANSFORMEVENT_PKEY;
    public static final UniqueKey<TreelinkRecord> TREELINK_PKEY = UniqueKeys0.TREELINK_PKEY;
    public static final UniqueKey<TreemodelRecord> TREEMODEL_PKEY = UniqueKeys0.TREEMODEL_PKEY;
    public static final UniqueKey<TreemodelcomponentRecord> TREEMODELCOMPONENT_PKEY = UniqueKeys0.TREEMODELCOMPONENT_PKEY;
    public static final UniqueKey<TreenodeRecord> TREENODE_PKEY = UniqueKeys0.TREENODE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AnnotationRecord, ExperimentrunRecord> ANNOTATION__ANNOTATION_EXPERIMENTRUN_FKEY = ForeignKeys0.ANNOTATION__ANNOTATION_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<AnnotationfragmentRecord, AnnotationRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_ANNOTATION_FKEY = ForeignKeys0.ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_ANNOTATION_FKEY;
    public static final ForeignKey<AnnotationfragmentRecord, TransformerRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_TRANSFORMER_FKEY = ForeignKeys0.ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_TRANSFORMER_FKEY;
    public static final ForeignKey<AnnotationfragmentRecord, DataframeRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_DATAFRAME_FKEY = ForeignKeys0.ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_DATAFRAME_FKEY;
    public static final ForeignKey<AnnotationfragmentRecord, TransformerspecRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_SPEC_FKEY = ForeignKeys0.ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_SPEC_FKEY;
    public static final ForeignKey<AnnotationfragmentRecord, ExperimentrunRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_EXPERIMENTRUN_FKEY = ForeignKeys0.ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<CrossvalidationeventRecord, DataframeRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_DF_FKEY = ForeignKeys0.CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_DF_FKEY;
    public static final ForeignKey<CrossvalidationeventRecord, TransformerspecRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_SPEC_FKEY = ForeignKeys0.CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_SPEC_FKEY;
    public static final ForeignKey<CrossvalidationeventRecord, ExperimentrunRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<CrossvalidationfoldRecord, MetriceventRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_METRIC_FKEY = ForeignKeys0.CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_METRIC_FKEY;
    public static final ForeignKey<CrossvalidationfoldRecord, CrossvalidationeventRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EVENT_FKEY = ForeignKeys0.CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EVENT_FKEY;
    public static final ForeignKey<CrossvalidationfoldRecord, ExperimentrunRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EXPERIMENTRUN_FKEY = ForeignKeys0.CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<DataframeRecord, ExperimentrunRecord> DATAFRAME__DATAFRAME_EXPERIMENTRUN_FKEY = ForeignKeys0.DATAFRAME__DATAFRAME_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<DataframecolumnRecord, DataframeRecord> DATAFRAMECOLUMN__DATAFRAMECOLUMN_DFID_FKEY = ForeignKeys0.DATAFRAMECOLUMN__DATAFRAMECOLUMN_DFID_FKEY;
    public static final ForeignKey<DataframemetadataRecord, DataframeRecord> DATAFRAMEMETADATA__DATAFRAMEMETADATA_DFID_FKEY = ForeignKeys0.DATAFRAMEMETADATA__DATAFRAMEMETADATA_DFID_FKEY;
    public static final ForeignKey<DataframemetadataRecord, MetadatakvRecord> DATAFRAMEMETADATA__DATAFRAMEMETADATA_METADATAKVID_FKEY = ForeignKeys0.DATAFRAMEMETADATA__DATAFRAMEMETADATA_METADATAKVID_FKEY;
    public static final ForeignKey<DataframesplitRecord, RandomspliteventRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_SPLITEVENTID_FKEY = ForeignKeys0.DATAFRAMESPLIT__DATAFRAMESPLIT_SPLITEVENTID_FKEY;
    public static final ForeignKey<DataframesplitRecord, DataframeRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_DATAFRAMEID_FKEY = ForeignKeys0.DATAFRAMESPLIT__DATAFRAMESPLIT_DATAFRAMEID_FKEY;
    public static final ForeignKey<DataframesplitRecord, ExperimentrunRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_EXPERIMENTRUN_FKEY = ForeignKeys0.DATAFRAMESPLIT__DATAFRAMESPLIT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<EventRecord, ExperimentrunRecord> EVENT__EVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.EVENT__EVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<ExperimentRecord, ProjectRecord> EXPERIMENT__EXPERIMENT_PROJECT_FKEY = ForeignKeys0.EXPERIMENT__EXPERIMENT_PROJECT_FKEY;
    public static final ForeignKey<ExperimentrunRecord, ExperimentRecord> EXPERIMENTRUN__EXPERIMENTRUN_EXPERIMENT_FKEY = ForeignKeys0.EXPERIMENTRUN__EXPERIMENTRUN_EXPERIMENT_FKEY;
    public static final ForeignKey<FeatureRecord, TransformerRecord> FEATURE__FEATURE_TRANSFORMER_FKEY = ForeignKeys0.FEATURE__FEATURE_TRANSFORMER_FKEY;
    public static final ForeignKey<FiteventRecord, TransformerspecRecord> FITEVENT__FITEVENT_TRANSFORMERSPEC_FKEY = ForeignKeys0.FITEVENT__FITEVENT_TRANSFORMERSPEC_FKEY;
    public static final ForeignKey<FiteventRecord, TransformerRecord> FITEVENT__FITEVENT_TRANSFORMER_FKEY = ForeignKeys0.FITEVENT__FITEVENT_TRANSFORMER_FKEY;
    public static final ForeignKey<FiteventRecord, DataframeRecord> FITEVENT__FITEVENT_DF_FKEY = ForeignKeys0.FITEVENT__FITEVENT_DF_FKEY;
    public static final ForeignKey<FiteventRecord, ExperimentrunRecord> FITEVENT__FITEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.FITEVENT__FITEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<GridcellcrossvalidationRecord, GridsearchcrossvalidationeventRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_GRIDSEARCH_FKEY = ForeignKeys0.GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_GRIDSEARCH_FKEY;
    public static final ForeignKey<GridcellcrossvalidationRecord, CrossvalidationeventRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_CROSSVALIDATION_FKEY = ForeignKeys0.GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_CROSSVALIDATION_FKEY;
    public static final ForeignKey<GridcellcrossvalidationRecord, ExperimentrunRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_EXPERIMENTRUN_FKEY = ForeignKeys0.GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<GridsearchcrossvalidationeventRecord, FiteventRecord> GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_BEST_FKEY = ForeignKeys0.GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_BEST_FKEY;
    public static final ForeignKey<GridsearchcrossvalidationeventRecord, ExperimentrunRecord> GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<HyperparameterRecord, TransformerspecRecord> HYPERPARAMETER__HYPERPARAMETER_SPEC_FKEY = ForeignKeys0.HYPERPARAMETER__HYPERPARAMETER_SPEC_FKEY;
    public static final ForeignKey<HyperparameterRecord, ExperimentrunRecord> HYPERPARAMETER__HYPERPARAMETER_EXPERIMENTRUN_FKEY = ForeignKeys0.HYPERPARAMETER__HYPERPARAMETER_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<LinearmodelRecord, TransformerRecord> LINEARMODEL__LINEARMODEL_MODEL_FKEY = ForeignKeys0.LINEARMODEL__LINEARMODEL_MODEL_FKEY;
    public static final ForeignKey<LinearmodeltermRecord, TransformerRecord> LINEARMODELTERM__LINEARMODELTERM_MODEL_FKEY = ForeignKeys0.LINEARMODELTERM__LINEARMODELTERM_MODEL_FKEY;
    public static final ForeignKey<MetriceventRecord, TransformerRecord> METRICEVENT__METRICEVENT_TRANSFORMER_FKEY = ForeignKeys0.METRICEVENT__METRICEVENT_TRANSFORMER_FKEY;
    public static final ForeignKey<MetriceventRecord, DataframeRecord> METRICEVENT__METRICEVENT_DF_FKEY = ForeignKeys0.METRICEVENT__METRICEVENT_DF_FKEY;
    public static final ForeignKey<MetriceventRecord, ExperimentrunRecord> METRICEVENT__METRICEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.METRICEVENT__METRICEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<ModelobjectivehistoryRecord, TransformerRecord> MODELOBJECTIVEHISTORY__MODELOBJECTIVEHISTORY_MODEL_FKEY = ForeignKeys0.MODELOBJECTIVEHISTORY__MODELOBJECTIVEHISTORY_MODEL_FKEY;
    public static final ForeignKey<PipelinestageRecord, FiteventRecord> PIPELINESTAGE__PIPELINESTAGE_PIPELINEFITEVENT_FKEY = ForeignKeys0.PIPELINESTAGE__PIPELINESTAGE_PIPELINEFITEVENT_FKEY;
    public static final ForeignKey<PipelinestageRecord, EventRecord> PIPELINESTAGE__PIPELINESTAGE_TRANSFORMORFITEVENT_FKEY = ForeignKeys0.PIPELINESTAGE__PIPELINESTAGE_TRANSFORMORFITEVENT_FKEY;
    public static final ForeignKey<PipelinestageRecord, ExperimentrunRecord> PIPELINESTAGE__PIPELINESTAGE_EXPERIMENTRUN_FKEY = ForeignKeys0.PIPELINESTAGE__PIPELINESTAGE_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<RandomspliteventRecord, DataframeRecord> RANDOMSPLITEVENT__RANDOMSPLITEVENT_INPUTDATAFRAMEID_FKEY = ForeignKeys0.RANDOMSPLITEVENT__RANDOMSPLITEVENT_INPUTDATAFRAMEID_FKEY;
    public static final ForeignKey<RandomspliteventRecord, ExperimentrunRecord> RANDOMSPLITEVENT__RANDOMSPLITEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.RANDOMSPLITEVENT__RANDOMSPLITEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<TransformerRecord, ExperimentrunRecord> TRANSFORMER__TRANSFORMER_EXPERIMENTRUN_FKEY = ForeignKeys0.TRANSFORMER__TRANSFORMER_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<TransformerspecRecord, ExperimentrunRecord> TRANSFORMERSPEC__TRANSFORMERSPEC_EXPERIMENTRUN_FKEY = ForeignKeys0.TRANSFORMERSPEC__TRANSFORMERSPEC_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<TransformeventRecord, DataframeRecord> TRANSFORMEVENT__TRANSFORMEVENT_OLDDF_FKEY = ForeignKeys0.TRANSFORMEVENT__TRANSFORMEVENT_OLDDF_FKEY;
    public static final ForeignKey<TransformeventRecord, DataframeRecord> TRANSFORMEVENT__TRANSFORMEVENT_NEWDF_FKEY = ForeignKeys0.TRANSFORMEVENT__TRANSFORMEVENT_NEWDF_FKEY;
    public static final ForeignKey<TransformeventRecord, TransformerRecord> TRANSFORMEVENT__TRANSFORMEVENT_TRANSFORMER_FKEY = ForeignKeys0.TRANSFORMEVENT__TRANSFORMEVENT_TRANSFORMER_FKEY;
    public static final ForeignKey<TransformeventRecord, ExperimentrunRecord> TRANSFORMEVENT__TRANSFORMEVENT_EXPERIMENTRUN_FKEY = ForeignKeys0.TRANSFORMEVENT__TRANSFORMEVENT_EXPERIMENTRUN_FKEY;
    public static final ForeignKey<TreelinkRecord, TreenodeRecord> TREELINK__TREELINK_PARENT_FKEY = ForeignKeys0.TREELINK__TREELINK_PARENT_FKEY;
    public static final ForeignKey<TreelinkRecord, TreenodeRecord> TREELINK__TREELINK_CHILD_FKEY = ForeignKeys0.TREELINK__TREELINK_CHILD_FKEY;
    public static final ForeignKey<TreemodelRecord, TransformerRecord> TREEMODEL__TREEMODEL_MODEL_FKEY = ForeignKeys0.TREEMODEL__TREEMODEL_MODEL_FKEY;
    public static final ForeignKey<TreemodelcomponentRecord, TransformerRecord> TREEMODELCOMPONENT__TREEMODELCOMPONENT_MODEL_FKEY = ForeignKeys0.TREEMODELCOMPONENT__TREEMODELCOMPONENT_MODEL_FKEY;
    public static final ForeignKey<TreemodelcomponentRecord, TreenodeRecord> TREEMODELCOMPONENT__TREEMODELCOMPONENT_ROOTNODE_FKEY = ForeignKeys0.TREEMODELCOMPONENT__TREEMODELCOMPONENT_ROOTNODE_FKEY;
    public static final ForeignKey<TreenodeRecord, TreenodeRecord> TREENODE__TREENODE_ROOTNODE_FKEY = ForeignKeys0.TREENODE__TREENODE_ROOTNODE_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AnnotationRecord, Integer> IDENTITY_ANNOTATION = Internal.createIdentity(Annotation.ANNOTATION, Annotation.ANNOTATION.ID);
        public static Identity<AnnotationfragmentRecord, Integer> IDENTITY_ANNOTATIONFRAGMENT = Internal.createIdentity(Annotationfragment.ANNOTATIONFRAGMENT, Annotationfragment.ANNOTATIONFRAGMENT.ID);
        public static Identity<CrossvalidationeventRecord, Integer> IDENTITY_CROSSVALIDATIONEVENT = Internal.createIdentity(Crossvalidationevent.CROSSVALIDATIONEVENT, Crossvalidationevent.CROSSVALIDATIONEVENT.ID);
        public static Identity<CrossvalidationfoldRecord, Integer> IDENTITY_CROSSVALIDATIONFOLD = Internal.createIdentity(Crossvalidationfold.CROSSVALIDATIONFOLD, Crossvalidationfold.CROSSVALIDATIONFOLD.ID);
        public static Identity<DataframeRecord, Integer> IDENTITY_DATAFRAME = Internal.createIdentity(Dataframe.DATAFRAME, Dataframe.DATAFRAME.ID);
        public static Identity<DataframecolumnRecord, Integer> IDENTITY_DATAFRAMECOLUMN = Internal.createIdentity(Dataframecolumn.DATAFRAMECOLUMN, Dataframecolumn.DATAFRAMECOLUMN.ID);
        public static Identity<DataframemetadataRecord, Integer> IDENTITY_DATAFRAMEMETADATA = Internal.createIdentity(Dataframemetadata.DATAFRAMEMETADATA, Dataframemetadata.DATAFRAMEMETADATA.ID);
        public static Identity<DataframesplitRecord, Integer> IDENTITY_DATAFRAMESPLIT = Internal.createIdentity(Dataframesplit.DATAFRAMESPLIT, Dataframesplit.DATAFRAMESPLIT.ID);
        public static Identity<EventRecord, Integer> IDENTITY_EVENT = Internal.createIdentity(Event.EVENT, Event.EVENT.ID);
        public static Identity<ExperimentRecord, Integer> IDENTITY_EXPERIMENT = Internal.createIdentity(Experiment.EXPERIMENT, Experiment.EXPERIMENT.ID);
        public static Identity<ExperimentrunRecord, Integer> IDENTITY_EXPERIMENTRUN = Internal.createIdentity(Experimentrun.EXPERIMENTRUN, Experimentrun.EXPERIMENTRUN.ID);
        public static Identity<FeatureRecord, Integer> IDENTITY_FEATURE = Internal.createIdentity(Feature.FEATURE, Feature.FEATURE.ID);
        public static Identity<FiteventRecord, Integer> IDENTITY_FITEVENT = Internal.createIdentity(Fitevent.FITEVENT, Fitevent.FITEVENT.ID);
        public static Identity<GridcellcrossvalidationRecord, Integer> IDENTITY_GRIDCELLCROSSVALIDATION = Internal.createIdentity(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID);
        public static Identity<GridsearchcrossvalidationeventRecord, Integer> IDENTITY_GRIDSEARCHCROSSVALIDATIONEVENT = Internal.createIdentity(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.ID);
        public static Identity<HyperparameterRecord, Integer> IDENTITY_HYPERPARAMETER = Internal.createIdentity(Hyperparameter.HYPERPARAMETER, Hyperparameter.HYPERPARAMETER.ID);
        public static Identity<LinearmodelRecord, Integer> IDENTITY_LINEARMODEL = Internal.createIdentity(Linearmodel.LINEARMODEL, Linearmodel.LINEARMODEL.ID);
        public static Identity<LinearmodeltermRecord, Integer> IDENTITY_LINEARMODELTERM = Internal.createIdentity(Linearmodelterm.LINEARMODELTERM, Linearmodelterm.LINEARMODELTERM.ID);
        public static Identity<MetadatakvRecord, Integer> IDENTITY_METADATAKV = Internal.createIdentity(Metadatakv.METADATAKV, Metadatakv.METADATAKV.ID);
        public static Identity<MetriceventRecord, Integer> IDENTITY_METRICEVENT = Internal.createIdentity(Metricevent.METRICEVENT, Metricevent.METRICEVENT.ID);
        public static Identity<ModelobjectivehistoryRecord, Integer> IDENTITY_MODELOBJECTIVEHISTORY = Internal.createIdentity(Modelobjectivehistory.MODELOBJECTIVEHISTORY, Modelobjectivehistory.MODELOBJECTIVEHISTORY.ID);
        public static Identity<PipelinestageRecord, Integer> IDENTITY_PIPELINESTAGE = Internal.createIdentity(Pipelinestage.PIPELINESTAGE, Pipelinestage.PIPELINESTAGE.ID);
        public static Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Internal.createIdentity(Project.PROJECT, Project.PROJECT.ID);
        public static Identity<RandomspliteventRecord, Integer> IDENTITY_RANDOMSPLITEVENT = Internal.createIdentity(Randomsplitevent.RANDOMSPLITEVENT, Randomsplitevent.RANDOMSPLITEVENT.ID);
        public static Identity<TransformerRecord, Integer> IDENTITY_TRANSFORMER = Internal.createIdentity(Transformer.TRANSFORMER, Transformer.TRANSFORMER.ID);
        public static Identity<TransformerspecRecord, Integer> IDENTITY_TRANSFORMERSPEC = Internal.createIdentity(Transformerspec.TRANSFORMERSPEC, Transformerspec.TRANSFORMERSPEC.ID);
        public static Identity<TransformeventRecord, Integer> IDENTITY_TRANSFORMEVENT = Internal.createIdentity(Transformevent.TRANSFORMEVENT, Transformevent.TRANSFORMEVENT.ID);
        public static Identity<TreelinkRecord, Integer> IDENTITY_TREELINK = Internal.createIdentity(Treelink.TREELINK, Treelink.TREELINK.ID);
        public static Identity<TreemodelRecord, Integer> IDENTITY_TREEMODEL = Internal.createIdentity(Treemodel.TREEMODEL, Treemodel.TREEMODEL.ID);
        public static Identity<TreemodelcomponentRecord, Integer> IDENTITY_TREEMODELCOMPONENT = Internal.createIdentity(Treemodelcomponent.TREEMODELCOMPONENT, Treemodelcomponent.TREEMODELCOMPONENT.ID);
        public static Identity<TreenodeRecord, Integer> IDENTITY_TREENODE = Internal.createIdentity(Treenode.TREENODE, Treenode.TREENODE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AnnotationRecord> ANNOTATION_PKEY = Internal.createUniqueKey(Annotation.ANNOTATION, "annotation_pkey", Annotation.ANNOTATION.ID);
        public static final UniqueKey<AnnotationfragmentRecord> ANNOTATIONFRAGMENT_PKEY = Internal.createUniqueKey(Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment_pkey", Annotationfragment.ANNOTATIONFRAGMENT.ID);
        public static final UniqueKey<CrossvalidationeventRecord> CROSSVALIDATIONEVENT_PKEY = Internal.createUniqueKey(Crossvalidationevent.CROSSVALIDATIONEVENT, "crossvalidationevent_pkey", Crossvalidationevent.CROSSVALIDATIONEVENT.ID);
        public static final UniqueKey<CrossvalidationfoldRecord> CROSSVALIDATIONFOLD_PKEY = Internal.createUniqueKey(Crossvalidationfold.CROSSVALIDATIONFOLD, "crossvalidationfold_pkey", Crossvalidationfold.CROSSVALIDATIONFOLD.ID);
        public static final UniqueKey<DataframeRecord> DATAFRAME_PKEY = Internal.createUniqueKey(Dataframe.DATAFRAME, "dataframe_pkey", Dataframe.DATAFRAME.ID);
        public static final UniqueKey<DataframecolumnRecord> DATAFRAMECOLUMN_PKEY = Internal.createUniqueKey(Dataframecolumn.DATAFRAMECOLUMN, "dataframecolumn_pkey", Dataframecolumn.DATAFRAMECOLUMN.ID);
        public static final UniqueKey<DataframemetadataRecord> DATAFRAMEMETADATA_PKEY = Internal.createUniqueKey(Dataframemetadata.DATAFRAMEMETADATA, "dataframemetadata_pkey", Dataframemetadata.DATAFRAMEMETADATA.ID);
        public static final UniqueKey<DataframesplitRecord> DATAFRAMESPLIT_PKEY = Internal.createUniqueKey(Dataframesplit.DATAFRAMESPLIT, "dataframesplit_pkey", Dataframesplit.DATAFRAMESPLIT.ID);
        public static final UniqueKey<EventRecord> EVENT_PKEY = Internal.createUniqueKey(Event.EVENT, "event_pkey", Event.EVENT.ID);
        public static final UniqueKey<ExperimentRecord> EXPERIMENT_PKEY = Internal.createUniqueKey(Experiment.EXPERIMENT, "experiment_pkey", Experiment.EXPERIMENT.ID);
        public static final UniqueKey<ExperimentrunRecord> EXPERIMENTRUN_PKEY = Internal.createUniqueKey(Experimentrun.EXPERIMENTRUN, "experimentrun_pkey", Experimentrun.EXPERIMENTRUN.ID);
        public static final UniqueKey<FeatureRecord> FEATURE_PKEY = Internal.createUniqueKey(Feature.FEATURE, "feature_pkey", Feature.FEATURE.ID);
        public static final UniqueKey<FiteventRecord> FITEVENT_PKEY = Internal.createUniqueKey(Fitevent.FITEVENT, "fitevent_pkey", Fitevent.FITEVENT.ID);
        public static final UniqueKey<GridcellcrossvalidationRecord> GRIDCELLCROSSVALIDATION_PKEY = Internal.createUniqueKey(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, "gridcellcrossvalidation_pkey", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID);
        public static final UniqueKey<GridsearchcrossvalidationeventRecord> GRIDSEARCHCROSSVALIDATIONEVENT_PKEY = Internal.createUniqueKey(Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, "gridsearchcrossvalidationevent_pkey", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.ID);
        public static final UniqueKey<HyperparameterRecord> HYPERPARAMETER_PKEY = Internal.createUniqueKey(Hyperparameter.HYPERPARAMETER, "hyperparameter_pkey", Hyperparameter.HYPERPARAMETER.ID);
        public static final UniqueKey<LinearmodelRecord> LINEARMODEL_PKEY = Internal.createUniqueKey(Linearmodel.LINEARMODEL, "linearmodel_pkey", Linearmodel.LINEARMODEL.ID);
        public static final UniqueKey<LinearmodeltermRecord> LINEARMODELTERM_PKEY = Internal.createUniqueKey(Linearmodelterm.LINEARMODELTERM, "linearmodelterm_pkey", Linearmodelterm.LINEARMODELTERM.ID);
        public static final UniqueKey<MetadatakvRecord> METADATAKV_PKEY = Internal.createUniqueKey(Metadatakv.METADATAKV, "metadatakv_pkey", Metadatakv.METADATAKV.ID);
        public static final UniqueKey<MetriceventRecord> METRICEVENT_PKEY = Internal.createUniqueKey(Metricevent.METRICEVENT, "metricevent_pkey", Metricevent.METRICEVENT.ID);
        public static final UniqueKey<ModelobjectivehistoryRecord> MODELOBJECTIVEHISTORY_PKEY = Internal.createUniqueKey(Modelobjectivehistory.MODELOBJECTIVEHISTORY, "modelobjectivehistory_pkey", Modelobjectivehistory.MODELOBJECTIVEHISTORY.ID);
        public static final UniqueKey<PipelinestageRecord> PIPELINESTAGE_PKEY = Internal.createUniqueKey(Pipelinestage.PIPELINESTAGE, "pipelinestage_pkey", Pipelinestage.PIPELINESTAGE.ID);
        public static final UniqueKey<ProjectRecord> PROJECT_PKEY = Internal.createUniqueKey(Project.PROJECT, "project_pkey", Project.PROJECT.ID);
        public static final UniqueKey<RandomspliteventRecord> RANDOMSPLITEVENT_PKEY = Internal.createUniqueKey(Randomsplitevent.RANDOMSPLITEVENT, "randomsplitevent_pkey", Randomsplitevent.RANDOMSPLITEVENT.ID);
        public static final UniqueKey<TransformerRecord> TRANSFORMER_PKEY = Internal.createUniqueKey(Transformer.TRANSFORMER, "transformer_pkey", Transformer.TRANSFORMER.ID);
        public static final UniqueKey<TransformerspecRecord> TRANSFORMERSPEC_PKEY = Internal.createUniqueKey(Transformerspec.TRANSFORMERSPEC, "transformerspec_pkey", Transformerspec.TRANSFORMERSPEC.ID);
        public static final UniqueKey<TransformeventRecord> TRANSFORMEVENT_PKEY = Internal.createUniqueKey(Transformevent.TRANSFORMEVENT, "transformevent_pkey", Transformevent.TRANSFORMEVENT.ID);
        public static final UniqueKey<TreelinkRecord> TREELINK_PKEY = Internal.createUniqueKey(Treelink.TREELINK, "treelink_pkey", Treelink.TREELINK.ID);
        public static final UniqueKey<TreemodelRecord> TREEMODEL_PKEY = Internal.createUniqueKey(Treemodel.TREEMODEL, "treemodel_pkey", Treemodel.TREEMODEL.ID);
        public static final UniqueKey<TreemodelcomponentRecord> TREEMODELCOMPONENT_PKEY = Internal.createUniqueKey(Treemodelcomponent.TREEMODELCOMPONENT, "treemodelcomponent_pkey", Treemodelcomponent.TREEMODELCOMPONENT.ID);
        public static final UniqueKey<TreenodeRecord> TREENODE_PKEY = Internal.createUniqueKey(Treenode.TREENODE, "treenode_pkey", Treenode.TREENODE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AnnotationRecord, ExperimentrunRecord> ANNOTATION__ANNOTATION_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Annotation.ANNOTATION, "annotation__annotation_experimentrun_fkey", Annotation.ANNOTATION.EXPERIMENTRUN);
        public static final ForeignKey<AnnotationfragmentRecord, AnnotationRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_ANNOTATION_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.ANNOTATION_PKEY, Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment__annotationfragment_annotation_fkey", Annotationfragment.ANNOTATIONFRAGMENT.ANNOTATION);
        public static final ForeignKey<AnnotationfragmentRecord, TransformerRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_TRANSFORMER_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment__annotationfragment_transformer_fkey", Annotationfragment.ANNOTATIONFRAGMENT.TRANSFORMER);
        public static final ForeignKey<AnnotationfragmentRecord, DataframeRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_DATAFRAME_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment__annotationfragment_dataframe_fkey", Annotationfragment.ANNOTATIONFRAGMENT.DATAFRAME);
        public static final ForeignKey<AnnotationfragmentRecord, TransformerspecRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_SPEC_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMERSPEC_PKEY, Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment__annotationfragment_spec_fkey", Annotationfragment.ANNOTATIONFRAGMENT.SPEC);
        public static final ForeignKey<AnnotationfragmentRecord, ExperimentrunRecord> ANNOTATIONFRAGMENT__ANNOTATIONFRAGMENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Annotationfragment.ANNOTATIONFRAGMENT, "annotationfragment__annotationfragment_experimentrun_fkey", Annotationfragment.ANNOTATIONFRAGMENT.EXPERIMENTRUN);
        public static final ForeignKey<CrossvalidationeventRecord, DataframeRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_DF_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Crossvalidationevent.CROSSVALIDATIONEVENT, "crossvalidationevent__crossvalidationevent_df_fkey", Crossvalidationevent.CROSSVALIDATIONEVENT.DF);
        public static final ForeignKey<CrossvalidationeventRecord, TransformerspecRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_SPEC_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMERSPEC_PKEY, Crossvalidationevent.CROSSVALIDATIONEVENT, "crossvalidationevent__crossvalidationevent_spec_fkey", Crossvalidationevent.CROSSVALIDATIONEVENT.SPEC);
        public static final ForeignKey<CrossvalidationeventRecord, ExperimentrunRecord> CROSSVALIDATIONEVENT__CROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Crossvalidationevent.CROSSVALIDATIONEVENT, "crossvalidationevent__crossvalidationevent_experimentrun_fkey", Crossvalidationevent.CROSSVALIDATIONEVENT.EXPERIMENTRUN);
        public static final ForeignKey<CrossvalidationfoldRecord, MetriceventRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_METRIC_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.METRICEVENT_PKEY, Crossvalidationfold.CROSSVALIDATIONFOLD, "crossvalidationfold__crossvalidationfold_metric_fkey", Crossvalidationfold.CROSSVALIDATIONFOLD.METRIC);
        public static final ForeignKey<CrossvalidationfoldRecord, CrossvalidationeventRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EVENT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.CROSSVALIDATIONEVENT_PKEY, Crossvalidationfold.CROSSVALIDATIONFOLD, "crossvalidationfold__crossvalidationfold_event_fkey", Crossvalidationfold.CROSSVALIDATIONFOLD.EVENT);
        public static final ForeignKey<CrossvalidationfoldRecord, ExperimentrunRecord> CROSSVALIDATIONFOLD__CROSSVALIDATIONFOLD_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Crossvalidationfold.CROSSVALIDATIONFOLD, "crossvalidationfold__crossvalidationfold_experimentrun_fkey", Crossvalidationfold.CROSSVALIDATIONFOLD.EXPERIMENTRUN);
        public static final ForeignKey<DataframeRecord, ExperimentrunRecord> DATAFRAME__DATAFRAME_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Dataframe.DATAFRAME, "dataframe__dataframe_experimentrun_fkey", Dataframe.DATAFRAME.EXPERIMENTRUN);
        public static final ForeignKey<DataframecolumnRecord, DataframeRecord> DATAFRAMECOLUMN__DATAFRAMECOLUMN_DFID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Dataframecolumn.DATAFRAMECOLUMN, "dataframecolumn__dataframecolumn_dfid_fkey", Dataframecolumn.DATAFRAMECOLUMN.DFID);
        public static final ForeignKey<DataframemetadataRecord, DataframeRecord> DATAFRAMEMETADATA__DATAFRAMEMETADATA_DFID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Dataframemetadata.DATAFRAMEMETADATA, "dataframemetadata__dataframemetadata_dfid_fkey", Dataframemetadata.DATAFRAMEMETADATA.DFID);
        public static final ForeignKey<DataframemetadataRecord, MetadatakvRecord> DATAFRAMEMETADATA__DATAFRAMEMETADATA_METADATAKVID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.METADATAKV_PKEY, Dataframemetadata.DATAFRAMEMETADATA, "dataframemetadata__dataframemetadata_metadatakvid_fkey", Dataframemetadata.DATAFRAMEMETADATA.METADATAKVID);
        public static final ForeignKey<DataframesplitRecord, RandomspliteventRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_SPLITEVENTID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.RANDOMSPLITEVENT_PKEY, Dataframesplit.DATAFRAMESPLIT, "dataframesplit__dataframesplit_spliteventid_fkey", Dataframesplit.DATAFRAMESPLIT.SPLITEVENTID);
        public static final ForeignKey<DataframesplitRecord, DataframeRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_DATAFRAMEID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Dataframesplit.DATAFRAMESPLIT, "dataframesplit__dataframesplit_dataframeid_fkey", Dataframesplit.DATAFRAMESPLIT.DATAFRAMEID);
        public static final ForeignKey<DataframesplitRecord, ExperimentrunRecord> DATAFRAMESPLIT__DATAFRAMESPLIT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Dataframesplit.DATAFRAMESPLIT, "dataframesplit__dataframesplit_experimentrun_fkey", Dataframesplit.DATAFRAMESPLIT.EXPERIMENTRUN);
        public static final ForeignKey<EventRecord, ExperimentrunRecord> EVENT__EVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Event.EVENT, "event__event_experimentrun_fkey", Event.EVENT.EXPERIMENTRUN);
        public static final ForeignKey<ExperimentRecord, ProjectRecord> EXPERIMENT__EXPERIMENT_PROJECT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.PROJECT_PKEY, Experiment.EXPERIMENT, "experiment__experiment_project_fkey", Experiment.EXPERIMENT.PROJECT);
        public static final ForeignKey<ExperimentrunRecord, ExperimentRecord> EXPERIMENTRUN__EXPERIMENTRUN_EXPERIMENT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENT_PKEY, Experimentrun.EXPERIMENTRUN, "experimentrun__experimentrun_experiment_fkey", Experimentrun.EXPERIMENTRUN.EXPERIMENT);
        public static final ForeignKey<FeatureRecord, TransformerRecord> FEATURE__FEATURE_TRANSFORMER_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Feature.FEATURE, "feature__feature_transformer_fkey", Feature.FEATURE.TRANSFORMER);
        public static final ForeignKey<FiteventRecord, TransformerspecRecord> FITEVENT__FITEVENT_TRANSFORMERSPEC_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMERSPEC_PKEY, Fitevent.FITEVENT, "fitevent__fitevent_transformerspec_fkey", Fitevent.FITEVENT.TRANSFORMERSPEC);
        public static final ForeignKey<FiteventRecord, TransformerRecord> FITEVENT__FITEVENT_TRANSFORMER_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Fitevent.FITEVENT, "fitevent__fitevent_transformer_fkey", Fitevent.FITEVENT.TRANSFORMER);
        public static final ForeignKey<FiteventRecord, DataframeRecord> FITEVENT__FITEVENT_DF_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Fitevent.FITEVENT, "fitevent__fitevent_df_fkey", Fitevent.FITEVENT.DF);
        public static final ForeignKey<FiteventRecord, ExperimentrunRecord> FITEVENT__FITEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Fitevent.FITEVENT, "fitevent__fitevent_experimentrun_fkey", Fitevent.FITEVENT.EXPERIMENTRUN);
        public static final ForeignKey<GridcellcrossvalidationRecord, GridsearchcrossvalidationeventRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_GRIDSEARCH_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.GRIDSEARCHCROSSVALIDATIONEVENT_PKEY, Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, "gridcellcrossvalidation__gridcellcrossvalidation_gridsearch_fkey", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.GRIDSEARCH);
        public static final ForeignKey<GridcellcrossvalidationRecord, CrossvalidationeventRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_CROSSVALIDATION_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.CROSSVALIDATIONEVENT_PKEY, Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, "gridcellcrossvalidation__gridcellcrossvalidation_crossvalidation_fkey", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.CROSSVALIDATION);
        public static final ForeignKey<GridcellcrossvalidationRecord, ExperimentrunRecord> GRIDCELLCROSSVALIDATION__GRIDCELLCROSSVALIDATION_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, "gridcellcrossvalidation__gridcellcrossvalidation_experimentrun_fkey", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.EXPERIMENTRUN);
        public static final ForeignKey<GridsearchcrossvalidationeventRecord, FiteventRecord> GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_BEST_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.FITEVENT_PKEY, Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, "gridsearchcrossvalidationevent__gridsearchcrossvalidationevent_best_fkey", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.BEST);
        public static final ForeignKey<GridsearchcrossvalidationeventRecord, ExperimentrunRecord> GRIDSEARCHCROSSVALIDATIONEVENT__GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, "gridsearchcrossvalidationevent__gridsearchcrossvalidationevent_experimentrun_fkey", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.EXPERIMENTRUN);
        public static final ForeignKey<HyperparameterRecord, TransformerspecRecord> HYPERPARAMETER__HYPERPARAMETER_SPEC_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMERSPEC_PKEY, Hyperparameter.HYPERPARAMETER, "hyperparameter__hyperparameter_spec_fkey", Hyperparameter.HYPERPARAMETER.SPEC);
        public static final ForeignKey<HyperparameterRecord, ExperimentrunRecord> HYPERPARAMETER__HYPERPARAMETER_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Hyperparameter.HYPERPARAMETER, "hyperparameter__hyperparameter_experimentrun_fkey", Hyperparameter.HYPERPARAMETER.EXPERIMENTRUN);
        public static final ForeignKey<LinearmodelRecord, TransformerRecord> LINEARMODEL__LINEARMODEL_MODEL_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Linearmodel.LINEARMODEL, "linearmodel__linearmodel_model_fkey", Linearmodel.LINEARMODEL.MODEL);
        public static final ForeignKey<LinearmodeltermRecord, TransformerRecord> LINEARMODELTERM__LINEARMODELTERM_MODEL_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Linearmodelterm.LINEARMODELTERM, "linearmodelterm__linearmodelterm_model_fkey", Linearmodelterm.LINEARMODELTERM.MODEL);
        public static final ForeignKey<MetriceventRecord, TransformerRecord> METRICEVENT__METRICEVENT_TRANSFORMER_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Metricevent.METRICEVENT, "metricevent__metricevent_transformer_fkey", Metricevent.METRICEVENT.TRANSFORMER);
        public static final ForeignKey<MetriceventRecord, DataframeRecord> METRICEVENT__METRICEVENT_DF_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Metricevent.METRICEVENT, "metricevent__metricevent_df_fkey", Metricevent.METRICEVENT.DF);
        public static final ForeignKey<MetriceventRecord, ExperimentrunRecord> METRICEVENT__METRICEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Metricevent.METRICEVENT, "metricevent__metricevent_experimentrun_fkey", Metricevent.METRICEVENT.EXPERIMENTRUN);
        public static final ForeignKey<ModelobjectivehistoryRecord, TransformerRecord> MODELOBJECTIVEHISTORY__MODELOBJECTIVEHISTORY_MODEL_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Modelobjectivehistory.MODELOBJECTIVEHISTORY, "modelobjectivehistory__modelobjectivehistory_model_fkey", Modelobjectivehistory.MODELOBJECTIVEHISTORY.MODEL);
        public static final ForeignKey<PipelinestageRecord, FiteventRecord> PIPELINESTAGE__PIPELINESTAGE_PIPELINEFITEVENT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.FITEVENT_PKEY, Pipelinestage.PIPELINESTAGE, "pipelinestage__pipelinestage_pipelinefitevent_fkey", Pipelinestage.PIPELINESTAGE.PIPELINEFITEVENT);
        public static final ForeignKey<PipelinestageRecord, EventRecord> PIPELINESTAGE__PIPELINESTAGE_TRANSFORMORFITEVENT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EVENT_PKEY, Pipelinestage.PIPELINESTAGE, "pipelinestage__pipelinestage_transformorfitevent_fkey", Pipelinestage.PIPELINESTAGE.TRANSFORMORFITEVENT);
        public static final ForeignKey<PipelinestageRecord, ExperimentrunRecord> PIPELINESTAGE__PIPELINESTAGE_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Pipelinestage.PIPELINESTAGE, "pipelinestage__pipelinestage_experimentrun_fkey", Pipelinestage.PIPELINESTAGE.EXPERIMENTRUN);
        public static final ForeignKey<RandomspliteventRecord, DataframeRecord> RANDOMSPLITEVENT__RANDOMSPLITEVENT_INPUTDATAFRAMEID_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Randomsplitevent.RANDOMSPLITEVENT, "randomsplitevent__randomsplitevent_inputdataframeid_fkey", Randomsplitevent.RANDOMSPLITEVENT.INPUTDATAFRAMEID);
        public static final ForeignKey<RandomspliteventRecord, ExperimentrunRecord> RANDOMSPLITEVENT__RANDOMSPLITEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Randomsplitevent.RANDOMSPLITEVENT, "randomsplitevent__randomsplitevent_experimentrun_fkey", Randomsplitevent.RANDOMSPLITEVENT.EXPERIMENTRUN);
        public static final ForeignKey<TransformerRecord, ExperimentrunRecord> TRANSFORMER__TRANSFORMER_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Transformer.TRANSFORMER, "transformer__transformer_experimentrun_fkey", Transformer.TRANSFORMER.EXPERIMENTRUN);
        public static final ForeignKey<TransformerspecRecord, ExperimentrunRecord> TRANSFORMERSPEC__TRANSFORMERSPEC_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Transformerspec.TRANSFORMERSPEC, "transformerspec__transformerspec_experimentrun_fkey", Transformerspec.TRANSFORMERSPEC.EXPERIMENTRUN);
        public static final ForeignKey<TransformeventRecord, DataframeRecord> TRANSFORMEVENT__TRANSFORMEVENT_OLDDF_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Transformevent.TRANSFORMEVENT, "transformevent__transformevent_olddf_fkey", Transformevent.TRANSFORMEVENT.OLDDF);
        public static final ForeignKey<TransformeventRecord, DataframeRecord> TRANSFORMEVENT__TRANSFORMEVENT_NEWDF_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.DATAFRAME_PKEY, Transformevent.TRANSFORMEVENT, "transformevent__transformevent_newdf_fkey", Transformevent.TRANSFORMEVENT.NEWDF);
        public static final ForeignKey<TransformeventRecord, TransformerRecord> TRANSFORMEVENT__TRANSFORMEVENT_TRANSFORMER_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Transformevent.TRANSFORMEVENT, "transformevent__transformevent_transformer_fkey", Transformevent.TRANSFORMEVENT.TRANSFORMER);
        public static final ForeignKey<TransformeventRecord, ExperimentrunRecord> TRANSFORMEVENT__TRANSFORMEVENT_EXPERIMENTRUN_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.EXPERIMENTRUN_PKEY, Transformevent.TRANSFORMEVENT, "transformevent__transformevent_experimentrun_fkey", Transformevent.TRANSFORMEVENT.EXPERIMENTRUN);
        public static final ForeignKey<TreelinkRecord, TreenodeRecord> TREELINK__TREELINK_PARENT_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TREENODE_PKEY, Treelink.TREELINK, "treelink__treelink_parent_fkey", Treelink.TREELINK.PARENT);
        public static final ForeignKey<TreelinkRecord, TreenodeRecord> TREELINK__TREELINK_CHILD_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TREENODE_PKEY, Treelink.TREELINK, "treelink__treelink_child_fkey", Treelink.TREELINK.CHILD);
        public static final ForeignKey<TreemodelRecord, TransformerRecord> TREEMODEL__TREEMODEL_MODEL_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Treemodel.TREEMODEL, "treemodel__treemodel_model_fkey", Treemodel.TREEMODEL.MODEL);
        public static final ForeignKey<TreemodelcomponentRecord, TransformerRecord> TREEMODELCOMPONENT__TREEMODELCOMPONENT_MODEL_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TRANSFORMER_PKEY, Treemodelcomponent.TREEMODELCOMPONENT, "treemodelcomponent__treemodelcomponent_model_fkey", Treemodelcomponent.TREEMODELCOMPONENT.MODEL);
        public static final ForeignKey<TreemodelcomponentRecord, TreenodeRecord> TREEMODELCOMPONENT__TREEMODELCOMPONENT_ROOTNODE_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TREENODE_PKEY, Treemodelcomponent.TREEMODELCOMPONENT, "treemodelcomponent__treemodelcomponent_rootnode_fkey", Treemodelcomponent.TREEMODELCOMPONENT.ROOTNODE);
        public static final ForeignKey<TreenodeRecord, TreenodeRecord> TREENODE__TREENODE_ROOTNODE_FKEY = Internal.createForeignKey(jooq.postgresql.gen.public_.Keys.TREENODE_PKEY, Treenode.TREENODE, "treenode__treenode_rootnode_fkey", Treenode.TREENODE.ROOTNODE);
    }
}
