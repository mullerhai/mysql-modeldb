/*
 * This file is generated by jOOQ.
 */
package jooq.mysql.gen.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.mysql.gen.tables.Annotation;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnnotationRecord extends UpdatableRecordImpl<AnnotationRecord> implements Record3<Integer, Timestamp, Integer> {

    private static final long serialVersionUID = 1693433961;

    /**
     * Setter for <code>modeldb_test.Annotation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.Annotation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.Annotation.posted</code>.
     */
    public void setPosted(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.Annotation.posted</code>.
     */
    public Timestamp getPosted() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>modeldb_test.Annotation.experimentRun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.Annotation.experimentRun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Timestamp, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Timestamp, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Annotation.ANNOTATION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Annotation.ANNOTATION.POSTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Annotation.ANNOTATION.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getPosted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getPosted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationRecord value2(Timestamp value) {
        setPosted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationRecord value3(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationRecord values(Integer value1, Timestamp value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnnotationRecord
     */
    public AnnotationRecord() {
        super(Annotation.ANNOTATION);
    }

    /**
     * Create a detached, initialised AnnotationRecord
     */
    public AnnotationRecord(Integer id, Timestamp posted, Integer experimentrun) {
        super(Annotation.ANNOTATION);

        set(0, id);
        set(1, posted);
        set(2, experimentrun);
    }
}
