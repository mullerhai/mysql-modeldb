/*
 * This file is generated by jOOQ.
 */
package jooq.mysql.gen.tables.records;


import javax.annotation.Generated;

import jooq.mysql.gen.tables.Annotationfragment;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnnotationfragmentRecord extends UpdatableRecordImpl<AnnotationfragmentRecord> implements Record9<Integer, Integer, Integer, String, Integer, Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 389629253;

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.annotation</code>.
     */
    public void setAnnotation(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.annotation</code>.
     */
    public Integer getAnnotation() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.fragmentIndex</code>.
     */
    public void setFragmentindex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.fragmentIndex</code>.
     */
    public Integer getFragmentindex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.transformer</code>.
     */
    public void setTransformer(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.transformer</code>.
     */
    public Integer getTransformer() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.DataFrame</code>.
     */
    public void setDataframe(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.DataFrame</code>.
     */
    public Integer getDataframe() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.spec</code>.
     */
    public void setSpec(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.spec</code>.
     */
    public Integer getSpec() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.message</code>.
     */
    public void setMessage(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.message</code>.
     */
    public String getMessage() {
        return (String) get(7);
    }

    /**
     * Setter for <code>modeldb_test.AnnotationFragment.experimentRun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>modeldb_test.AnnotationFragment.experimentRun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, String, Integer, Integer, Integer, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, String, Integer, Integer, Integer, String, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Annotationfragment.ANNOTATIONFRAGMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Annotationfragment.ANNOTATIONFRAGMENT.ANNOTATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Annotationfragment.ANNOTATIONFRAGMENT.FRAGMENTINDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Annotationfragment.ANNOTATIONFRAGMENT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Annotationfragment.ANNOTATIONFRAGMENT.TRANSFORMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Annotationfragment.ANNOTATIONFRAGMENT.DATAFRAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Annotationfragment.ANNOTATIONFRAGMENT.SPEC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Annotationfragment.ANNOTATIONFRAGMENT.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Annotationfragment.ANNOTATIONFRAGMENT.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAnnotation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getFragmentindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getTransformer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getDataframe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getSpec();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAnnotation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getFragmentindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getTransformer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getDataframe();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getSpec();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value2(Integer value) {
        setAnnotation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value3(Integer value) {
        setFragmentindex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value5(Integer value) {
        setTransformer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value6(Integer value) {
        setDataframe(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value7(Integer value) {
        setSpec(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value8(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord value9(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnnotationfragmentRecord values(Integer value1, Integer value2, Integer value3, String value4, Integer value5, Integer value6, Integer value7, String value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnnotationfragmentRecord
     */
    public AnnotationfragmentRecord() {
        super(Annotationfragment.ANNOTATIONFRAGMENT);
    }

    /**
     * Create a detached, initialised AnnotationfragmentRecord
     */
    public AnnotationfragmentRecord(Integer id, Integer annotation, Integer fragmentindex, String type, Integer transformer, Integer dataframe, Integer spec, String message, Integer experimentrun) {
        super(Annotationfragment.ANNOTATIONFRAGMENT);

        set(0, id);
        set(1, annotation);
        set(2, fragmentindex);
        set(3, type);
        set(4, transformer);
        set(5, dataframe);
        set(6, spec);
        set(7, message);
        set(8, experimentrun);
    }
}
