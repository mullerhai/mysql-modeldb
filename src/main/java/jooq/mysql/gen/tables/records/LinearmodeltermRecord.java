/*
 * This file is generated by jOOQ.
 */
package jooq.mysql.gen.tables.records;


import javax.annotation.Generated;

import jooq.mysql.gen.tables.Linearmodelterm;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinearmodeltermRecord extends UpdatableRecordImpl<LinearmodeltermRecord> implements Record7<Integer, Integer, Integer, Double, Double, Double, Double> {

    private static final long serialVersionUID = -209908442;

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.model</code>.
     */
    public void setModel(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.model</code>.
     */
    public Integer getModel() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.termIndex</code>.
     */
    public void setTermindex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.termIndex</code>.
     */
    public Integer getTermindex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.coefficient</code>.
     */
    public void setCoefficient(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.coefficient</code>.
     */
    public Double getCoefficient() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.tStat</code>.
     */
    public void setTstat(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.tStat</code>.
     */
    public Double getTstat() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.stdErr</code>.
     */
    public void setStderr(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.stdErr</code>.
     */
    public Double getStderr() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>modeldb_test.LinearModelTerm.pValue</code>.
     */
    public void setPvalue(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModelTerm.pValue</code>.
     */
    public Double getPvalue() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Double, Double, Double, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Double, Double, Double, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Linearmodelterm.LINEARMODELTERM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Linearmodelterm.LINEARMODELTERM.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Linearmodelterm.LINEARMODELTERM.TERMINDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Linearmodelterm.LINEARMODELTERM.COEFFICIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Linearmodelterm.LINEARMODELTERM.TSTAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Linearmodelterm.LINEARMODELTERM.STDERR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Linearmodelterm.LINEARMODELTERM.PVALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getTermindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getCoefficient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getTstat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getStderr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getPvalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getTermindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getCoefficient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getTstat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getStderr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getPvalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value2(Integer value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value3(Integer value) {
        setTermindex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value4(Double value) {
        setCoefficient(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value5(Double value) {
        setTstat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value6(Double value) {
        setStderr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord value7(Double value) {
        setPvalue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodeltermRecord values(Integer value1, Integer value2, Integer value3, Double value4, Double value5, Double value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinearmodeltermRecord
     */
    public LinearmodeltermRecord() {
        super(Linearmodelterm.LINEARMODELTERM);
    }

    /**
     * Create a detached, initialised LinearmodeltermRecord
     */
    public LinearmodeltermRecord(Integer id, Integer model, Integer termindex, Double coefficient, Double tstat, Double stderr, Double pvalue) {
        super(Linearmodelterm.LINEARMODELTERM);

        set(0, id);
        set(1, model);
        set(2, termindex);
        set(3, coefficient);
        set(4, tstat);
        set(5, stderr);
        set(6, pvalue);
    }
}
