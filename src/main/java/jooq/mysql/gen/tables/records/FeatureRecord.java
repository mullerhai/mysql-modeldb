/*
 * This file is generated by jOOQ.
 */
package jooq.mysql.gen.tables.records;


import javax.annotation.Generated;

import jooq.mysql.gen.tables.Feature;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeatureRecord extends UpdatableRecordImpl<FeatureRecord> implements Record5<Integer, String, Integer, Double, Integer> {

    private static final long serialVersionUID = 499442830;

    /**
     * Setter for <code>modeldb_test.Feature.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.Feature.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.Feature.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.Feature.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>modeldb_test.Feature.featureIndex</code>.
     */
    public void setFeatureindex(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.Feature.featureIndex</code>.
     */
    public Integer getFeatureindex() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>modeldb_test.Feature.importance</code>.
     */
    public void setImportance(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>modeldb_test.Feature.importance</code>.
     */
    public Double getImportance() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>modeldb_test.Feature.transformer</code>.
     */
    public void setTransformer(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>modeldb_test.Feature.transformer</code>.
     */
    public Integer getTransformer() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Double, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Double, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Feature.FEATURE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Feature.FEATURE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Feature.FEATURE.FEATUREINDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Feature.FEATURE.IMPORTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Feature.FEATURE.TRANSFORMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getFeatureindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getImportance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getTransformer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getFeatureindex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getImportance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getTransformer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord value3(Integer value) {
        setFeatureindex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord value4(Double value) {
        setImportance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord value5(Integer value) {
        setTransformer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeatureRecord values(Integer value1, String value2, Integer value3, Double value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeatureRecord
     */
    public FeatureRecord() {
        super(Feature.FEATURE);
    }

    /**
     * Create a detached, initialised FeatureRecord
     */
    public FeatureRecord(Integer id, String name, Integer featureindex, Double importance, Integer transformer) {
        super(Feature.FEATURE);

        set(0, id);
        set(1, name);
        set(2, featureindex);
        set(3, importance);
        set(4, transformer);
    }
}
