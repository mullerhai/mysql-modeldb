/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Annotation;
import jooq.sqlite.gen.tables.Annotationfragment;
import jooq.sqlite.gen.tables.Crossvalidationevent;
import jooq.sqlite.gen.tables.Crossvalidationfold;
import jooq.sqlite.gen.tables.Dataframe;
import jooq.sqlite.gen.tables.Dataframecolumn;
import jooq.sqlite.gen.tables.Dataframemetadata;
import jooq.sqlite.gen.tables.Dataframesplit;
import jooq.sqlite.gen.tables.Event;
import jooq.sqlite.gen.tables.Experiment;
import jooq.sqlite.gen.tables.ExperimentRunView;
import jooq.sqlite.gen.tables.Experimentrun;
import jooq.sqlite.gen.tables.Feature;
import jooq.sqlite.gen.tables.Fitevent;
import jooq.sqlite.gen.tables.Gridcellcrossvalidation;
import jooq.sqlite.gen.tables.Gridsearchcrossvalidationevent;
import jooq.sqlite.gen.tables.Hyperparameter;
import jooq.sqlite.gen.tables.Linearmodel;
import jooq.sqlite.gen.tables.Linearmodelterm;
import jooq.sqlite.gen.tables.Metadatakv;
import jooq.sqlite.gen.tables.Metricevent;
import jooq.sqlite.gen.tables.ModelView;
import jooq.sqlite.gen.tables.Modelobjectivehistory;
import jooq.sqlite.gen.tables.PipelineView;
import jooq.sqlite.gen.tables.Pipelinestage;
import jooq.sqlite.gen.tables.Project;
import jooq.sqlite.gen.tables.Randomsplitevent;
import jooq.sqlite.gen.tables.Transformer;
import jooq.sqlite.gen.tables.TransformerView;
import jooq.sqlite.gen.tables.Transformerspec;
import jooq.sqlite.gen.tables.Transformevent;
import jooq.sqlite.gen.tables.Treelink;
import jooq.sqlite.gen.tables.Treemodel;
import jooq.sqlite.gen.tables.Treemodelcomponent;
import jooq.sqlite.gen.tables.Treenode;


/**
 * Convenience access to all tables in modeldb_test
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>modeldb_test.Annotation</code>.
     */
    public static final Annotation ANNOTATION = jooq.sqlite.gen.tables.Annotation.ANNOTATION;

    /**
     * The table <code>modeldb_test.AnnotationFragment</code>.
     */
    public static final Annotationfragment ANNOTATIONFRAGMENT = jooq.sqlite.gen.tables.Annotationfragment.ANNOTATIONFRAGMENT;

    /**
     * The table <code>modeldb_test.CrossValidationEvent</code>.
     */
    public static final Crossvalidationevent CROSSVALIDATIONEVENT = jooq.sqlite.gen.tables.Crossvalidationevent.CROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb_test.CrossValidationFold</code>.
     */
    public static final Crossvalidationfold CROSSVALIDATIONFOLD = jooq.sqlite.gen.tables.Crossvalidationfold.CROSSVALIDATIONFOLD;

    /**
     * The table <code>modeldb_test.DataFrame</code>.
     */
    public static final Dataframe DATAFRAME = jooq.sqlite.gen.tables.Dataframe.DATAFRAME;

    /**
     * The table <code>modeldb_test.DataFrameColumn</code>.
     */
    public static final Dataframecolumn DATAFRAMECOLUMN = jooq.sqlite.gen.tables.Dataframecolumn.DATAFRAMECOLUMN;

    /**
     * The table <code>modeldb_test.DataFrameMetadata</code>.
     */
    public static final Dataframemetadata DATAFRAMEMETADATA = jooq.sqlite.gen.tables.Dataframemetadata.DATAFRAMEMETADATA;

    /**
     * The table <code>modeldb_test.DataFrameSplit</code>.
     */
    public static final Dataframesplit DATAFRAMESPLIT = jooq.sqlite.gen.tables.Dataframesplit.DATAFRAMESPLIT;

    /**
     * The table <code>modeldb_test.Event</code>.
     */
    public static final Event EVENT = jooq.sqlite.gen.tables.Event.EVENT;

    /**
     * The table <code>modeldb_test.Experiment</code>.
     */
    public static final Experiment EXPERIMENT = jooq.sqlite.gen.tables.Experiment.EXPERIMENT;

    /**
     * The table <code>modeldb_test.ExperimentRun</code>.
     */
    public static final Experimentrun EXPERIMENTRUN = jooq.sqlite.gen.tables.Experimentrun.EXPERIMENTRUN;

    /**
     * VIEW
     */
    public static final ExperimentRunView EXPERIMENT_RUN_VIEW = jooq.sqlite.gen.tables.ExperimentRunView.EXPERIMENT_RUN_VIEW;

    /**
     * The table <code>modeldb_test.Feature</code>.
     */
    public static final Feature FEATURE = jooq.sqlite.gen.tables.Feature.FEATURE;

    /**
     * The table <code>modeldb_test.FitEvent</code>.
     */
    public static final Fitevent FITEVENT = jooq.sqlite.gen.tables.Fitevent.FITEVENT;

    /**
     * The table <code>modeldb_test.GridCellCrossValidation</code>.
     */
    public static final Gridcellcrossvalidation GRIDCELLCROSSVALIDATION = jooq.sqlite.gen.tables.Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION;

    /**
     * The table <code>modeldb_test.GridSearchCrossValidationEvent</code>.
     */
    public static final Gridsearchcrossvalidationevent GRIDSEARCHCROSSVALIDATIONEVENT = jooq.sqlite.gen.tables.Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb_test.HyperParameter</code>.
     */
    public static final Hyperparameter HYPERPARAMETER = jooq.sqlite.gen.tables.Hyperparameter.HYPERPARAMETER;

    /**
     * The table <code>modeldb_test.LinearModel</code>.
     */
    public static final Linearmodel LINEARMODEL = jooq.sqlite.gen.tables.Linearmodel.LINEARMODEL;

    /**
     * The table <code>modeldb_test.LinearModelTerm</code>.
     */
    public static final Linearmodelterm LINEARMODELTERM = jooq.sqlite.gen.tables.Linearmodelterm.LINEARMODELTERM;

    /**
     * The table <code>modeldb_test.MetadataKV</code>.
     */
    public static final Metadatakv METADATAKV = jooq.sqlite.gen.tables.Metadatakv.METADATAKV;

    /**
     * The table <code>modeldb_test.MetricEvent</code>.
     */
    public static final Metricevent METRICEVENT = jooq.sqlite.gen.tables.Metricevent.METRICEVENT;

    /**
     * The table <code>modeldb_test.ModelObjectiveHistory</code>.
     */
    public static final Modelobjectivehistory MODELOBJECTIVEHISTORY = jooq.sqlite.gen.tables.Modelobjectivehistory.MODELOBJECTIVEHISTORY;

    /**
     * VIEW
     */
    public static final ModelView MODEL_VIEW = jooq.sqlite.gen.tables.ModelView.MODEL_VIEW;

    /**
     * The table <code>modeldb_test.PipelineStage</code>.
     */
    public static final Pipelinestage PIPELINESTAGE = jooq.sqlite.gen.tables.Pipelinestage.PIPELINESTAGE;

    /**
     * VIEW
     */
    public static final PipelineView PIPELINE_VIEW = jooq.sqlite.gen.tables.PipelineView.PIPELINE_VIEW;

    /**
     * The table <code>modeldb_test.Project</code>.
     */
    public static final Project PROJECT = jooq.sqlite.gen.tables.Project.PROJECT;

    /**
     * The table <code>modeldb_test.RandomSplitEvent</code>.
     */
    public static final Randomsplitevent RANDOMSPLITEVENT = jooq.sqlite.gen.tables.Randomsplitevent.RANDOMSPLITEVENT;

    /**
     * The table <code>modeldb_test.Transformer</code>.
     */
    public static final Transformer TRANSFORMER = jooq.sqlite.gen.tables.Transformer.TRANSFORMER;

    /**
     * The table <code>modeldb_test.TransformerSpec</code>.
     */
    public static final Transformerspec TRANSFORMERSPEC = jooq.sqlite.gen.tables.Transformerspec.TRANSFORMERSPEC;

    /**
     * VIEW
     */
    public static final TransformerView TRANSFORMER_VIEW = jooq.sqlite.gen.tables.TransformerView.TRANSFORMER_VIEW;

    /**
     * The table <code>modeldb_test.TransformEvent</code>.
     */
    public static final Transformevent TRANSFORMEVENT = jooq.sqlite.gen.tables.Transformevent.TRANSFORMEVENT;

    /**
     * The table <code>modeldb_test.TreeLink</code>.
     */
    public static final Treelink TREELINK = jooq.sqlite.gen.tables.Treelink.TREELINK;

    /**
     * The table <code>modeldb_test.TreeModel</code>.
     */
    public static final Treemodel TREEMODEL = jooq.sqlite.gen.tables.Treemodel.TREEMODEL;

    /**
     * The table <code>modeldb_test.TreeModelComponent</code>.
     */
    public static final Treemodelcomponent TREEMODELCOMPONENT = jooq.sqlite.gen.tables.Treemodelcomponent.TREEMODELCOMPONENT;

    /**
     * The table <code>modeldb_test.TreeNode</code>.
     */
    public static final Treenode TREENODE = jooq.sqlite.gen.tables.Treenode.TREENODE;
}
