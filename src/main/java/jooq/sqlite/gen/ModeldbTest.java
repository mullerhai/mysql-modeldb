/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Annotation;
import jooq.sqlite.gen.tables.Annotationfragment;
import jooq.sqlite.gen.tables.Crossvalidationevent;
import jooq.sqlite.gen.tables.Crossvalidationfold;
import jooq.sqlite.gen.tables.Dataframe;
import jooq.sqlite.gen.tables.Dataframecolumn;
import jooq.sqlite.gen.tables.Dataframemetadata;
import jooq.sqlite.gen.tables.Dataframesplit;
import jooq.sqlite.gen.tables.Event;
import jooq.sqlite.gen.tables.Experiment;
import jooq.sqlite.gen.tables.ExperimentRunView;
import jooq.sqlite.gen.tables.Experimentrun;
import jooq.sqlite.gen.tables.Feature;
import jooq.sqlite.gen.tables.Fitevent;
import jooq.sqlite.gen.tables.Gridcellcrossvalidation;
import jooq.sqlite.gen.tables.Gridsearchcrossvalidationevent;
import jooq.sqlite.gen.tables.Hyperparameter;
import jooq.sqlite.gen.tables.Linearmodel;
import jooq.sqlite.gen.tables.Linearmodelterm;
import jooq.sqlite.gen.tables.Metadatakv;
import jooq.sqlite.gen.tables.Metricevent;
import jooq.sqlite.gen.tables.ModelView;
import jooq.sqlite.gen.tables.Modelobjectivehistory;
import jooq.sqlite.gen.tables.PipelineView;
import jooq.sqlite.gen.tables.Pipelinestage;
import jooq.sqlite.gen.tables.Project;
import jooq.sqlite.gen.tables.Randomsplitevent;
import jooq.sqlite.gen.tables.Transformer;
import jooq.sqlite.gen.tables.TransformerView;
import jooq.sqlite.gen.tables.Transformerspec;
import jooq.sqlite.gen.tables.Transformevent;
import jooq.sqlite.gen.tables.Treelink;
import jooq.sqlite.gen.tables.Treemodel;
import jooq.sqlite.gen.tables.Treemodelcomponent;
import jooq.sqlite.gen.tables.Treenode;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModeldbTest extends SchemaImpl {

    private static final long serialVersionUID = 346934988;

    /**
     * The reference instance of <code>modeldb_test</code>
     */
    public static final ModeldbTest MODELDB_TEST = new ModeldbTest();

    /**
     * The table <code>modeldb_test.Annotation</code>.
     */
    public final Annotation ANNOTATION = jooq.sqlite.gen.tables.Annotation.ANNOTATION;

    /**
     * The table <code>modeldb_test.AnnotationFragment</code>.
     */
    public final Annotationfragment ANNOTATIONFRAGMENT = jooq.sqlite.gen.tables.Annotationfragment.ANNOTATIONFRAGMENT;

    /**
     * The table <code>modeldb_test.CrossValidationEvent</code>.
     */
    public final Crossvalidationevent CROSSVALIDATIONEVENT = jooq.sqlite.gen.tables.Crossvalidationevent.CROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb_test.CrossValidationFold</code>.
     */
    public final Crossvalidationfold CROSSVALIDATIONFOLD = jooq.sqlite.gen.tables.Crossvalidationfold.CROSSVALIDATIONFOLD;

    /**
     * The table <code>modeldb_test.DataFrame</code>.
     */
    public final Dataframe DATAFRAME = jooq.sqlite.gen.tables.Dataframe.DATAFRAME;

    /**
     * The table <code>modeldb_test.DataFrameColumn</code>.
     */
    public final Dataframecolumn DATAFRAMECOLUMN = jooq.sqlite.gen.tables.Dataframecolumn.DATAFRAMECOLUMN;

    /**
     * The table <code>modeldb_test.DataFrameMetadata</code>.
     */
    public final Dataframemetadata DATAFRAMEMETADATA = jooq.sqlite.gen.tables.Dataframemetadata.DATAFRAMEMETADATA;

    /**
     * The table <code>modeldb_test.DataFrameSplit</code>.
     */
    public final Dataframesplit DATAFRAMESPLIT = jooq.sqlite.gen.tables.Dataframesplit.DATAFRAMESPLIT;

    /**
     * The table <code>modeldb_test.Event</code>.
     */
    public final Event EVENT = jooq.sqlite.gen.tables.Event.EVENT;

    /**
     * The table <code>modeldb_test.Experiment</code>.
     */
    public final Experiment EXPERIMENT = jooq.sqlite.gen.tables.Experiment.EXPERIMENT;

    /**
     * The table <code>modeldb_test.ExperimentRun</code>.
     */
    public final Experimentrun EXPERIMENTRUN = jooq.sqlite.gen.tables.Experimentrun.EXPERIMENTRUN;

    /**
     * VIEW
     */
    public final ExperimentRunView EXPERIMENT_RUN_VIEW = jooq.sqlite.gen.tables.ExperimentRunView.EXPERIMENT_RUN_VIEW;

    /**
     * The table <code>modeldb_test.Feature</code>.
     */
    public final Feature FEATURE = jooq.sqlite.gen.tables.Feature.FEATURE;

    /**
     * The table <code>modeldb_test.FitEvent</code>.
     */
    public final Fitevent FITEVENT = jooq.sqlite.gen.tables.Fitevent.FITEVENT;

    /**
     * The table <code>modeldb_test.GridCellCrossValidation</code>.
     */
    public final Gridcellcrossvalidation GRIDCELLCROSSVALIDATION = jooq.sqlite.gen.tables.Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION;

    /**
     * The table <code>modeldb_test.GridSearchCrossValidationEvent</code>.
     */
    public final Gridsearchcrossvalidationevent GRIDSEARCHCROSSVALIDATIONEVENT = jooq.sqlite.gen.tables.Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb_test.HyperParameter</code>.
     */
    public final Hyperparameter HYPERPARAMETER = jooq.sqlite.gen.tables.Hyperparameter.HYPERPARAMETER;

    /**
     * The table <code>modeldb_test.LinearModel</code>.
     */
    public final Linearmodel LINEARMODEL = jooq.sqlite.gen.tables.Linearmodel.LINEARMODEL;

    /**
     * The table <code>modeldb_test.LinearModelTerm</code>.
     */
    public final Linearmodelterm LINEARMODELTERM = jooq.sqlite.gen.tables.Linearmodelterm.LINEARMODELTERM;

    /**
     * The table <code>modeldb_test.MetadataKV</code>.
     */
    public final Metadatakv METADATAKV = jooq.sqlite.gen.tables.Metadatakv.METADATAKV;

    /**
     * The table <code>modeldb_test.MetricEvent</code>.
     */
    public final Metricevent METRICEVENT = jooq.sqlite.gen.tables.Metricevent.METRICEVENT;

    /**
     * The table <code>modeldb_test.ModelObjectiveHistory</code>.
     */
    public final Modelobjectivehistory MODELOBJECTIVEHISTORY = jooq.sqlite.gen.tables.Modelobjectivehistory.MODELOBJECTIVEHISTORY;

    /**
     * VIEW
     */
    public final ModelView MODEL_VIEW = jooq.sqlite.gen.tables.ModelView.MODEL_VIEW;

    /**
     * The table <code>modeldb_test.PipelineStage</code>.
     */
    public final Pipelinestage PIPELINESTAGE = jooq.sqlite.gen.tables.Pipelinestage.PIPELINESTAGE;

    /**
     * VIEW
     */
    public final PipelineView PIPELINE_VIEW = jooq.sqlite.gen.tables.PipelineView.PIPELINE_VIEW;

    /**
     * The table <code>modeldb_test.Project</code>.
     */
    public final Project PROJECT = jooq.sqlite.gen.tables.Project.PROJECT;

    /**
     * The table <code>modeldb_test.RandomSplitEvent</code>.
     */
    public final Randomsplitevent RANDOMSPLITEVENT = jooq.sqlite.gen.tables.Randomsplitevent.RANDOMSPLITEVENT;

    /**
     * The table <code>modeldb_test.Transformer</code>.
     */
    public final Transformer TRANSFORMER = jooq.sqlite.gen.tables.Transformer.TRANSFORMER;

    /**
     * The table <code>modeldb_test.TransformerSpec</code>.
     */
    public final Transformerspec TRANSFORMERSPEC = jooq.sqlite.gen.tables.Transformerspec.TRANSFORMERSPEC;

    /**
     * VIEW
     */
    public final TransformerView TRANSFORMER_VIEW = jooq.sqlite.gen.tables.TransformerView.TRANSFORMER_VIEW;

    /**
     * The table <code>modeldb_test.TransformEvent</code>.
     */
    public final Transformevent TRANSFORMEVENT = jooq.sqlite.gen.tables.Transformevent.TRANSFORMEVENT;

    /**
     * The table <code>modeldb_test.TreeLink</code>.
     */
    public final Treelink TREELINK = jooq.sqlite.gen.tables.Treelink.TREELINK;

    /**
     * The table <code>modeldb_test.TreeModel</code>.
     */
    public final Treemodel TREEMODEL = jooq.sqlite.gen.tables.Treemodel.TREEMODEL;

    /**
     * The table <code>modeldb_test.TreeModelComponent</code>.
     */
    public final Treemodelcomponent TREEMODELCOMPONENT = jooq.sqlite.gen.tables.Treemodelcomponent.TREEMODELCOMPONENT;

    /**
     * The table <code>modeldb_test.TreeNode</code>.
     */
    public final Treenode TREENODE = jooq.sqlite.gen.tables.Treenode.TREENODE;

    /**
     * No further instances allowed
     */
    private ModeldbTest() {
        super("modeldb_test", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Annotation.ANNOTATION,
            Annotationfragment.ANNOTATIONFRAGMENT,
            Crossvalidationevent.CROSSVALIDATIONEVENT,
            Crossvalidationfold.CROSSVALIDATIONFOLD,
            Dataframe.DATAFRAME,
            Dataframecolumn.DATAFRAMECOLUMN,
            Dataframemetadata.DATAFRAMEMETADATA,
            Dataframesplit.DATAFRAMESPLIT,
            Event.EVENT,
            Experiment.EXPERIMENT,
            Experimentrun.EXPERIMENTRUN,
            ExperimentRunView.EXPERIMENT_RUN_VIEW,
            Feature.FEATURE,
            Fitevent.FITEVENT,
            Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION,
            Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT,
            Hyperparameter.HYPERPARAMETER,
            Linearmodel.LINEARMODEL,
            Linearmodelterm.LINEARMODELTERM,
            Metadatakv.METADATAKV,
            Metricevent.METRICEVENT,
            Modelobjectivehistory.MODELOBJECTIVEHISTORY,
            ModelView.MODEL_VIEW,
            Pipelinestage.PIPELINESTAGE,
            PipelineView.PIPELINE_VIEW,
            Project.PROJECT,
            Randomsplitevent.RANDOMSPLITEVENT,
            Transformer.TRANSFORMER,
            Transformerspec.TRANSFORMERSPEC,
            TransformerView.TRANSFORMER_VIEW,
            Transformevent.TRANSFORMEVENT,
            Treelink.TREELINK,
            Treemodel.TREEMODEL,
            Treemodelcomponent.TREEMODELCOMPONENT,
            Treenode.TREENODE);
    }
}
