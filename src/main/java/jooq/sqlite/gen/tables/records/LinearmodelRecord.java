/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen.tables.records;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Linearmodel;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinearmodelRecord extends UpdatableRecordImpl<LinearmodelRecord> implements Record5<Integer, Integer, Double, Double, Double> {

    private static final long serialVersionUID = -832830912;

    /**
     * Setter for <code>modeldb_test.LinearModel.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModel.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.LinearModel.model</code>.
     */
    public void setModel(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModel.model</code>.
     */
    public Integer getModel() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>modeldb_test.LinearModel.rmse</code>.
     */
    public void setRmse(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModel.rmse</code>.
     */
    public Double getRmse() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>modeldb_test.LinearModel.explainedVariance</code>.
     */
    public void setExplainedvariance(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModel.explainedVariance</code>.
     */
    public Double getExplainedvariance() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>modeldb_test.LinearModel.r2</code>.
     */
    public void setR2(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>modeldb_test.LinearModel.r2</code>.
     */
    public Double getR2() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Double, Double, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Double, Double, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Linearmodel.LINEARMODEL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Linearmodel.LINEARMODEL.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Linearmodel.LINEARMODEL.RMSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Linearmodel.LINEARMODEL.EXPLAINEDVARIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Linearmodel.LINEARMODEL.R2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getRmse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getExplainedvariance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getR2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getRmse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getExplainedvariance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getR2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord value2(Integer value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord value3(Double value) {
        setRmse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord value4(Double value) {
        setExplainedvariance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord value5(Double value) {
        setR2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LinearmodelRecord values(Integer value1, Integer value2, Double value3, Double value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinearmodelRecord
     */
    public LinearmodelRecord() {
        super(Linearmodel.LINEARMODEL);
    }

    /**
     * Create a detached, initialised LinearmodelRecord
     */
    public LinearmodelRecord(Integer id, Integer model, Double rmse, Double explainedvariance, Double r2) {
        super(Linearmodel.LINEARMODEL);

        set(0, id);
        set(1, model);
        set(2, rmse);
        set(3, explainedvariance);
        set(4, r2);
    }
}
