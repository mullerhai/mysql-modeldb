/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen.tables.records;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Modelobjectivehistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelobjectivehistoryRecord extends UpdatableRecordImpl<ModelobjectivehistoryRecord> implements Record4<Integer, Integer, Integer, Double> {

    private static final long serialVersionUID = 1261887899;

    /**
     * Setter for <code>modeldb_test.ModelObjectiveHistory.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>modeldb_test.ModelObjectiveHistory.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>modeldb_test.ModelObjectiveHistory.model</code>.
     */
    public void setModel(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>modeldb_test.ModelObjectiveHistory.model</code>.
     */
    public Integer getModel() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>modeldb_test.ModelObjectiveHistory.iteration</code>.
     */
    public void setIteration(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>modeldb_test.ModelObjectiveHistory.iteration</code>.
     */
    public Integer getIteration() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>modeldb_test.ModelObjectiveHistory.objectiveValue</code>.
     */
    public void setObjectivevalue(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>modeldb_test.ModelObjectiveHistory.objectiveValue</code>.
     */
    public Double getObjectivevalue() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Modelobjectivehistory.MODELOBJECTIVEHISTORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Modelobjectivehistory.MODELOBJECTIVEHISTORY.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Modelobjectivehistory.MODELOBJECTIVEHISTORY.ITERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Modelobjectivehistory.MODELOBJECTIVEHISTORY.OBJECTIVEVALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getIteration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getObjectivevalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIteration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getObjectivevalue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelobjectivehistoryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelobjectivehistoryRecord value2(Integer value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelobjectivehistoryRecord value3(Integer value) {
        setIteration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelobjectivehistoryRecord value4(Double value) {
        setObjectivevalue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ModelobjectivehistoryRecord values(Integer value1, Integer value2, Integer value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelobjectivehistoryRecord
     */
    public ModelobjectivehistoryRecord() {
        super(Modelobjectivehistory.MODELOBJECTIVEHISTORY);
    }

    /**
     * Create a detached, initialised ModelobjectivehistoryRecord
     */
    public ModelobjectivehistoryRecord(Integer id, Integer model, Integer iteration, Double objectivevalue) {
        super(Modelobjectivehistory.MODELOBJECTIVEHISTORY);

        set(0, id);
        set(1, model);
        set(2, iteration);
        set(3, objectivevalue);
    }
}
