/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Randomsplitevent;
import jooq.sqlite.gen.tables.records.RandomspliteventRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RandomspliteventDao extends DAOImpl<RandomspliteventRecord, jooq.sqlite.gen.tables.pojos.Randomsplitevent, Integer> {

    /**
     * Create a new RandomspliteventDao without any configuration
     */
    public RandomspliteventDao() {
        super(Randomsplitevent.RANDOMSPLITEVENT, jooq.sqlite.gen.tables.pojos.Randomsplitevent.class);
    }

    /**
     * Create a new RandomspliteventDao with an attached configuration
     */
    public RandomspliteventDao(Configuration configuration) {
        super(Randomsplitevent.RANDOMSPLITEVENT, jooq.sqlite.gen.tables.pojos.Randomsplitevent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.sqlite.gen.tables.pojos.Randomsplitevent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Randomsplitevent> fetchById(Integer... values) {
        return fetch(Randomsplitevent.RANDOMSPLITEVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.sqlite.gen.tables.pojos.Randomsplitevent fetchOneById(Integer value) {
        return fetchOne(Randomsplitevent.RANDOMSPLITEVENT.ID, value);
    }

    /**
     * Fetch records that have <code>inputDataFrameId IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Randomsplitevent> fetchByInputdataframeid(Integer... values) {
        return fetch(Randomsplitevent.RANDOMSPLITEVENT.INPUTDATAFRAMEID, values);
    }

    /**
     * Fetch records that have <code>randomSeed IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Randomsplitevent> fetchByRandomseed(Long... values) {
        return fetch(Randomsplitevent.RANDOMSPLITEVENT.RANDOMSEED, values);
    }

    /**
     * Fetch records that have <code>experimentRun IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Randomsplitevent> fetchByExperimentrun(Integer... values) {
        return fetch(Randomsplitevent.RANDOMSPLITEVENT.EXPERIMENTRUN, values);
    }
}
