/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Transformer;
import jooq.sqlite.gen.tables.records.TransformerRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransformerDao extends DAOImpl<TransformerRecord, jooq.sqlite.gen.tables.pojos.Transformer, Integer> {

    /**
     * Create a new TransformerDao without any configuration
     */
    public TransformerDao() {
        super(Transformer.TRANSFORMER, jooq.sqlite.gen.tables.pojos.Transformer.class);
    }

    /**
     * Create a new TransformerDao with an attached configuration
     */
    public TransformerDao(Configuration configuration) {
        super(Transformer.TRANSFORMER, jooq.sqlite.gen.tables.pojos.Transformer.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.sqlite.gen.tables.pojos.Transformer object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Transformer> fetchById(Integer... values) {
        return fetch(Transformer.TRANSFORMER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.sqlite.gen.tables.pojos.Transformer fetchOneById(Integer value) {
        return fetchOne(Transformer.TRANSFORMER.ID, value);
    }

    /**
     * Fetch records that have <code>transformerType IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Transformer> fetchByTransformertype(String... values) {
        return fetch(Transformer.TRANSFORMER.TRANSFORMERTYPE, values);
    }

    /**
     * Fetch records that have <code>tag IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Transformer> fetchByTag(String... values) {
        return fetch(Transformer.TRANSFORMER.TAG, values);
    }

    /**
     * Fetch records that have <code>experimentRun IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Transformer> fetchByExperimentrun(Integer... values) {
        return fetch(Transformer.TRANSFORMER.EXPERIMENTRUN, values);
    }

    /**
     * Fetch records that have <code>filepath IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Transformer> fetchByFilepath(String... values) {
        return fetch(Transformer.TRANSFORMER.FILEPATH, values);
    }
}
