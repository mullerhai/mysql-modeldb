/*
 * This file is generated by jOOQ.
 */
package jooq.sqlite.gen.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Dataframe;
import jooq.sqlite.gen.tables.records.DataframeRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataframeDao extends DAOImpl<DataframeRecord, jooq.sqlite.gen.tables.pojos.Dataframe, Integer> {

    /**
     * Create a new DataframeDao without any configuration
     */
    public DataframeDao() {
        super(Dataframe.DATAFRAME, jooq.sqlite.gen.tables.pojos.Dataframe.class);
    }

    /**
     * Create a new DataframeDao with an attached configuration
     */
    public DataframeDao(Configuration configuration) {
        super(Dataframe.DATAFRAME, jooq.sqlite.gen.tables.pojos.Dataframe.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(jooq.sqlite.gen.tables.pojos.Dataframe object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Dataframe> fetchById(Integer... values) {
        return fetch(Dataframe.DATAFRAME.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.sqlite.gen.tables.pojos.Dataframe fetchOneById(Integer value) {
        return fetchOne(Dataframe.DATAFRAME.ID, value);
    }

    /**
     * Fetch records that have <code>tag IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Dataframe> fetchByTag(String... values) {
        return fetch(Dataframe.DATAFRAME.TAG, values);
    }

    /**
     * Fetch records that have <code>numRows IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Dataframe> fetchByNumrows(Integer... values) {
        return fetch(Dataframe.DATAFRAME.NUMROWS, values);
    }

    /**
     * Fetch records that have <code>experimentRun IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Dataframe> fetchByExperimentrun(Integer... values) {
        return fetch(Dataframe.DATAFRAME.EXPERIMENTRUN, values);
    }

    /**
     * Fetch records that have <code>filepath IN (values)</code>
     */
    public List<jooq.sqlite.gen.tables.pojos.Dataframe> fetchByFilepath(String... values) {
        return fetch(Dataframe.DATAFRAME.FILEPATH, values);
    }
}
