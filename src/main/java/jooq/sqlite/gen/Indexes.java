///*
// * This file is generated by jOOQ.
// */
//package jooq.sqlite.gen;
//
//
//import javax.annotation.Generated;
//
//import jooq.sqlite.gen.tables.Annotation;
//import jooq.sqlite.gen.tables.Annotationfragment;
//import jooq.sqlite.gen.tables.Crossvalidationevent;
//import jooq.sqlite.gen.tables.Crossvalidationfold;
//import jooq.sqlite.gen.tables.Dataframe;
//import jooq.sqlite.gen.tables.Dataframecolumn;
//import jooq.sqlite.gen.tables.Dataframemetadata;
//import jooq.sqlite.gen.tables.Dataframesplit;
//import jooq.sqlite.gen.tables.Event;
//import jooq.sqlite.gen.tables.Experiment;
//import jooq.sqlite.gen.tables.Experimentrun;
//import jooq.sqlite.gen.tables.Feature;
//import jooq.sqlite.gen.tables.Fitevent;
//import jooq.sqlite.gen.tables.Gridcellcrossvalidation;
//import jooq.sqlite.gen.tables.Gridsearchcrossvalidationevent;
//import jooq.sqlite.gen.tables.Hyperparameter;
//import jooq.sqlite.gen.tables.Linearmodel;
//import jooq.sqlite.gen.tables.Linearmodelterm;
//import jooq.sqlite.gen.tables.Metadatakv;
//import jooq.sqlite.gen.tables.Metricevent;
//import jooq.sqlite.gen.tables.Modelobjectivehistory;
//import jooq.sqlite.gen.tables.Pipelinestage;
//import jooq.sqlite.gen.tables.Project;
//import jooq.sqlite.gen.tables.Randomsplitevent;
//import jooq.sqlite.gen.tables.Transformer;
//import jooq.sqlite.gen.tables.Transformerspec;
//import jooq.sqlite.gen.tables.Transformevent;
//import jooq.sqlite.gen.tables.Treelink;
//import jooq.sqlite.gen.tables.Treemodel;
//import jooq.sqlite.gen.tables.Treemodelcomponent;
//import jooq.sqlite.gen.tables.Treenode;
//
//import org.jooq.Index;
//import org.jooq.OrderField;
//import org.jooq.impl.Internal;
//
//
///**
// * A class modelling indexes of tables of the <code>modeldb_test</code> schema.
// */
//@Generated(
//    value = {
//        "http://www.jooq.org",
//        "jOOQ version:3.11.5"
//    },
//    comments = "This class is generated by jOOQ"
//)
//@SuppressWarnings({ "all", "unchecked", "rawtypes" })
//public class Indexes {
//
//    // -------------------------------------------------------------------------
//    // INDEX definitions
//    // -------------------------------------------------------------------------
//
//    public static final Index ANNOTATION_EXPERIMENTRUN = Indexes0.ANNOTATION_EXPERIMENTRUN;
//    public static final Index ANNOTATION_PRIMARY = Indexes0.ANNOTATION_PRIMARY;
//    public static final Index ANNOTATIONFRAGMENT_ANNOTATION = Indexes0.ANNOTATIONFRAGMENT_ANNOTATION;
//    public static final Index ANNOTATIONFRAGMENT_DATAFRAME = Indexes0.ANNOTATIONFRAGMENT_DATAFRAME;
//    public static final Index ANNOTATIONFRAGMENT_EXPERIMENTRUN = Indexes0.ANNOTATIONFRAGMENT_EXPERIMENTRUN;
//    public static final Index ANNOTATIONFRAGMENT_PRIMARY = Indexes0.ANNOTATIONFRAGMENT_PRIMARY;
//    public static final Index ANNOTATIONFRAGMENT_SPEC = Indexes0.ANNOTATIONFRAGMENT_SPEC;
//    public static final Index ANNOTATIONFRAGMENT_TRANSFORMER = Indexes0.ANNOTATIONFRAGMENT_TRANSFORMER;
//    public static final Index CROSSVALIDATIONEVENT_DF = Indexes0.CROSSVALIDATIONEVENT_DF;
//    public static final Index CROSSVALIDATIONEVENT_EXPERIMENTRUN = Indexes0.CROSSVALIDATIONEVENT_EXPERIMENTRUN;
//    public static final Index CROSSVALIDATIONEVENT_PRIMARY = Indexes0.CROSSVALIDATIONEVENT_PRIMARY;
//    public static final Index CROSSVALIDATIONEVENT_SPEC = Indexes0.CROSSVALIDATIONEVENT_SPEC;
//    public static final Index CROSSVALIDATIONFOLD_EVENT = Indexes0.CROSSVALIDATIONFOLD_EVENT;
//    public static final Index CROSSVALIDATIONFOLD_EXPERIMENTRUN = Indexes0.CROSSVALIDATIONFOLD_EXPERIMENTRUN;
//    public static final Index CROSSVALIDATIONFOLD_METRIC = Indexes0.CROSSVALIDATIONFOLD_METRIC;
//    public static final Index CROSSVALIDATIONFOLD_PRIMARY = Indexes0.CROSSVALIDATIONFOLD_PRIMARY;
//    public static final Index DATAFRAME_EXPERIMENTRUN = Indexes0.DATAFRAME_EXPERIMENTRUN;
//    public static final Index DATAFRAME_PRIMARY = Indexes0.DATAFRAME_PRIMARY;
//    public static final Index DATAFRAMECOLUMN_DATAFRAMECOLUMNINDEXDFID = Indexes0.DATAFRAMECOLUMN_DATAFRAMECOLUMNINDEXDFID;
//    public static final Index DATAFRAMECOLUMN_PRIMARY = Indexes0.DATAFRAMECOLUMN_PRIMARY;
//    public static final Index DATAFRAMEMETADATA_DFID = Indexes0.DATAFRAMEMETADATA_DFID;
//    public static final Index DATAFRAMEMETADATA_METADATAKVID = Indexes0.DATAFRAMEMETADATA_METADATAKVID;
//    public static final Index DATAFRAMEMETADATA_PRIMARY = Indexes0.DATAFRAMEMETADATA_PRIMARY;
//    public static final Index DATAFRAMESPLIT_DATAFRAMEID = Indexes0.DATAFRAMESPLIT_DATAFRAMEID;
//    public static final Index DATAFRAMESPLIT_EXPERIMENTRUN = Indexes0.DATAFRAMESPLIT_EXPERIMENTRUN;
//    public static final Index DATAFRAMESPLIT_PRIMARY = Indexes0.DATAFRAMESPLIT_PRIMARY;
//    public static final Index DATAFRAMESPLIT_SPLITEVENTID = Indexes0.DATAFRAMESPLIT_SPLITEVENTID;
//    public static final Index EVENT_EXPERIMENTRUN = Indexes0.EVENT_EXPERIMENTRUN;
//    public static final Index EVENT_PRIMARY = Indexes0.EVENT_PRIMARY;
//    public static final Index EXPERIMENT_PRIMARY = Indexes0.EXPERIMENT_PRIMARY;
//    public static final Index EXPERIMENT_PROJECT = Indexes0.EXPERIMENT_PROJECT;
//    public static final Index EXPERIMENTRUN_EXPERIMENT = Indexes0.EXPERIMENTRUN_EXPERIMENT;
//    public static final Index EXPERIMENTRUN_PRIMARY = Indexes0.EXPERIMENTRUN_PRIMARY;
//    public static final Index FEATURE_FEATUREINDEXNAME = Indexes0.FEATURE_FEATUREINDEXNAME;
//    public static final Index FEATURE_FEATUREINDEXTRANSFORMER = Indexes0.FEATURE_FEATUREINDEXTRANSFORMER;
//    public static final Index FEATURE_PRIMARY = Indexes0.FEATURE_PRIMARY;
//    public static final Index FITEVENT_DF = Indexes0.FITEVENT_DF;
//    public static final Index FITEVENT_EXPERIMENTRUN = Indexes0.FITEVENT_EXPERIMENTRUN;
//    public static final Index FITEVENT_FITEVENTINDEXTRANSFORMER = Indexes0.FITEVENT_FITEVENTINDEXTRANSFORMER;
//    public static final Index FITEVENT_PRIMARY = Indexes0.FITEVENT_PRIMARY;
//    public static final Index FITEVENT_TRANSFORMERSPEC = Indexes0.FITEVENT_TRANSFORMERSPEC;
//    public static final Index GRIDCELLCROSSVALIDATION_CROSSVALIDATION = Indexes0.GRIDCELLCROSSVALIDATION_CROSSVALIDATION;
//    public static final Index GRIDCELLCROSSVALIDATION_EXPERIMENTRUN = Indexes0.GRIDCELLCROSSVALIDATION_EXPERIMENTRUN;
//    public static final Index GRIDCELLCROSSVALIDATION_GRIDSEARCH = Indexes0.GRIDCELLCROSSVALIDATION_GRIDSEARCH;
//    public static final Index GRIDCELLCROSSVALIDATION_PRIMARY = Indexes0.GRIDCELLCROSSVALIDATION_PRIMARY;
//    public static final Index GRIDSEARCHCROSSVALIDATIONEVENT_BEST = Indexes0.GRIDSEARCHCROSSVALIDATIONEVENT_BEST;
//    public static final Index GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN = Indexes0.GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN;
//    public static final Index GRIDSEARCHCROSSVALIDATIONEVENT_PRIMARY = Indexes0.GRIDSEARCHCROSSVALIDATIONEVENT_PRIMARY;
//    public static final Index HYPERPARAMETER_EXPERIMENTRUN = Indexes0.HYPERPARAMETER_EXPERIMENTRUN;
//    public static final Index HYPERPARAMETER_PRIMARY = Indexes0.HYPERPARAMETER_PRIMARY;
//    public static final Index HYPERPARAMETER_SPEC = Indexes0.HYPERPARAMETER_SPEC;
//    public static final Index LINEARMODEL_MODEL = Indexes0.LINEARMODEL_MODEL;
//    public static final Index LINEARMODEL_PRIMARY = Indexes0.LINEARMODEL_PRIMARY;
//    public static final Index LINEARMODELTERM_MODEL = Indexes0.LINEARMODELTERM_MODEL;
//    public static final Index LINEARMODELTERM_PRIMARY = Indexes0.LINEARMODELTERM_PRIMARY;
//    public static final Index METADATAKV_PRIMARY = Indexes0.METADATAKV_PRIMARY;
//    public static final Index METRICEVENT_DF = Indexes0.METRICEVENT_DF;
//    public static final Index METRICEVENT_EXPERIMENTRUN = Indexes0.METRICEVENT_EXPERIMENTRUN;
//    public static final Index METRICEVENT_PRIMARY = Indexes0.METRICEVENT_PRIMARY;
//    public static final Index METRICEVENT_TRANSFORMER = Indexes0.METRICEVENT_TRANSFORMER;
//    public static final Index MODELOBJECTIVEHISTORY_MODEL = Indexes0.MODELOBJECTIVEHISTORY_MODEL;
//    public static final Index MODELOBJECTIVEHISTORY_PRIMARY = Indexes0.MODELOBJECTIVEHISTORY_PRIMARY;
//    public static final Index PIPELINESTAGE_EXPERIMENTRUN = Indexes0.PIPELINESTAGE_EXPERIMENTRUN;
//    public static final Index PIPELINESTAGE_PIPELINEFITEVENT = Indexes0.PIPELINESTAGE_PIPELINEFITEVENT;
//    public static final Index PIPELINESTAGE_PRIMARY = Indexes0.PIPELINESTAGE_PRIMARY;
//    public static final Index PIPELINESTAGE_TRANSFORMORFITEVENT = Indexes0.PIPELINESTAGE_TRANSFORMORFITEVENT;
//    public static final Index PROJECT_PRIMARY = Indexes0.PROJECT_PRIMARY;
//    public static final Index RANDOMSPLITEVENT_EXPERIMENTRUN = Indexes0.RANDOMSPLITEVENT_EXPERIMENTRUN;
//    public static final Index RANDOMSPLITEVENT_INPUTDATAFRAMEID = Indexes0.RANDOMSPLITEVENT_INPUTDATAFRAMEID;
//    public static final Index RANDOMSPLITEVENT_PRIMARY = Indexes0.RANDOMSPLITEVENT_PRIMARY;
//    public static final Index TRANSFORMER_EXPERIMENTRUN = Indexes0.TRANSFORMER_EXPERIMENTRUN;
//    public static final Index TRANSFORMER_PRIMARY = Indexes0.TRANSFORMER_PRIMARY;
//    public static final Index TRANSFORMERSPEC_EXPERIMENTRUN = Indexes0.TRANSFORMERSPEC_EXPERIMENTRUN;
//    public static final Index TRANSFORMERSPEC_PRIMARY = Indexes0.TRANSFORMERSPEC_PRIMARY;
//    public static final Index TRANSFORMEVENT_OLDDF = Indexes0.TRANSFORMEVENT_OLDDF;
//    public static final Index TRANSFORMEVENT_PRIMARY = Indexes0.TRANSFORMEVENT_PRIMARY;
//    public static final Index TRANSFORMEVENT_TRANSFORMER = Indexes0.TRANSFORMEVENT_TRANSFORMER;
//    public static final Index TRANSFORMEVENT_TRANSFORMEVENTINDEXEXPERIMENTRUN = Indexes0.TRANSFORMEVENT_TRANSFORMEVENTINDEXEXPERIMENTRUN;
//    public static final Index TRANSFORMEVENT_TRANSFORMEVENTINDEXNEWDF = Indexes0.TRANSFORMEVENT_TRANSFORMEVENTINDEXNEWDF;
//    public static final Index TREELINK_CHILD = Indexes0.TREELINK_CHILD;
//    public static final Index TREELINK_PARENT = Indexes0.TREELINK_PARENT;
//    public static final Index TREELINK_PRIMARY = Indexes0.TREELINK_PRIMARY;
//    public static final Index TREEMODEL_MODEL = Indexes0.TREEMODEL_MODEL;
//    public static final Index TREEMODEL_PRIMARY = Indexes0.TREEMODEL_PRIMARY;
//    public static final Index TREEMODELCOMPONENT_MODEL = Indexes0.TREEMODELCOMPONENT_MODEL;
//    public static final Index TREEMODELCOMPONENT_PRIMARY = Indexes0.TREEMODELCOMPONENT_PRIMARY;
//    public static final Index TREEMODELCOMPONENT_ROOTNODE = Indexes0.TREEMODELCOMPONENT_ROOTNODE;
//    public static final Index TREENODE_PRIMARY = Indexes0.TREENODE_PRIMARY;
//    public static final Index TREENODE_ROOTNODE = Indexes0.TREENODE_ROOTNODE;
//
//    // -------------------------------------------------------------------------
//    // [#1459] distribute members to avoid static initialisers > 64kb
//    // -------------------------------------------------------------------------
//
//    private static class Indexes0 {
//        public static Index ANNOTATION_EXPERIMENTRUN = Internal.createIndex("experimentRun", Annotation.ANNOTATION, new OrderField[] { Annotation.ANNOTATION.EXPERIMENTRUN }, false);
//        public static Index ANNOTATION_PRIMARY = Internal.createIndex("PRIMARY", Annotation.ANNOTATION, new OrderField[] { Annotation.ANNOTATION.ID }, true);
//        public static Index ANNOTATIONFRAGMENT_ANNOTATION = Internal.createIndex("annotation", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.ANNOTATION }, false);
//        public static Index ANNOTATIONFRAGMENT_DATAFRAME = Internal.createIndex("DataFrame", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.DATAFRAME }, false);
//        public static Index ANNOTATIONFRAGMENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.EXPERIMENTRUN }, false);
//        public static Index ANNOTATIONFRAGMENT_PRIMARY = Internal.createIndex("PRIMARY", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.ID }, true);
//        public static Index ANNOTATIONFRAGMENT_SPEC = Internal.createIndex("spec", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.SPEC }, false);
//        public static Index ANNOTATIONFRAGMENT_TRANSFORMER = Internal.createIndex("transformer", Annotationfragment.ANNOTATIONFRAGMENT, new OrderField[] { Annotationfragment.ANNOTATIONFRAGMENT.TRANSFORMER }, false);
//        public static Index CROSSVALIDATIONEVENT_DF = Internal.createIndex("df", Crossvalidationevent.CROSSVALIDATIONEVENT, new OrderField[] { Crossvalidationevent.CROSSVALIDATIONEVENT.DF }, false);
//        public static Index CROSSVALIDATIONEVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Crossvalidationevent.CROSSVALIDATIONEVENT, new OrderField[] { Crossvalidationevent.CROSSVALIDATIONEVENT.EXPERIMENTRUN }, false);
//        public static Index CROSSVALIDATIONEVENT_PRIMARY = Internal.createIndex("PRIMARY", Crossvalidationevent.CROSSVALIDATIONEVENT, new OrderField[] { Crossvalidationevent.CROSSVALIDATIONEVENT.ID }, true);
//        public static Index CROSSVALIDATIONEVENT_SPEC = Internal.createIndex("spec", Crossvalidationevent.CROSSVALIDATIONEVENT, new OrderField[] { Crossvalidationevent.CROSSVALIDATIONEVENT.SPEC }, false);
//        public static Index CROSSVALIDATIONFOLD_EVENT = Internal.createIndex("event", Crossvalidationfold.CROSSVALIDATIONFOLD, new OrderField[] { Crossvalidationfold.CROSSVALIDATIONFOLD.EVENT }, false);
//        public static Index CROSSVALIDATIONFOLD_EXPERIMENTRUN = Internal.createIndex("experimentRun", Crossvalidationfold.CROSSVALIDATIONFOLD, new OrderField[] { Crossvalidationfold.CROSSVALIDATIONFOLD.EXPERIMENTRUN }, false);
//        public static Index CROSSVALIDATIONFOLD_METRIC = Internal.createIndex("metric", Crossvalidationfold.CROSSVALIDATIONFOLD, new OrderField[] { Crossvalidationfold.CROSSVALIDATIONFOLD.METRIC }, false);
//        public static Index CROSSVALIDATIONFOLD_PRIMARY = Internal.createIndex("PRIMARY", Crossvalidationfold.CROSSVALIDATIONFOLD, new OrderField[] { Crossvalidationfold.CROSSVALIDATIONFOLD.ID }, true);
//        public static Index DATAFRAME_EXPERIMENTRUN = Internal.createIndex("experimentRun", Dataframe.DATAFRAME, new OrderField[] { Dataframe.DATAFRAME.EXPERIMENTRUN }, false);
//        public static Index DATAFRAME_PRIMARY = Internal.createIndex("PRIMARY", Dataframe.DATAFRAME, new OrderField[] { Dataframe.DATAFRAME.ID }, true);
//        public static Index DATAFRAMECOLUMN_DATAFRAMECOLUMNINDEXDFID = Internal.createIndex("DataFrameColumnIndexDfId", Dataframecolumn.DATAFRAMECOLUMN, new OrderField[] { Dataframecolumn.DATAFRAMECOLUMN.DFID }, false);
//        public static Index DATAFRAMECOLUMN_PRIMARY = Internal.createIndex("PRIMARY", Dataframecolumn.DATAFRAMECOLUMN, new OrderField[] { Dataframecolumn.DATAFRAMECOLUMN.ID }, true);
//        public static Index DATAFRAMEMETADATA_DFID = Internal.createIndex("dfId", Dataframemetadata.DATAFRAMEMETADATA, new OrderField[] { Dataframemetadata.DATAFRAMEMETADATA.DFID }, false);
//        public static Index DATAFRAMEMETADATA_METADATAKVID = Internal.createIndex("metadataKvId", Dataframemetadata.DATAFRAMEMETADATA, new OrderField[] { Dataframemetadata.DATAFRAMEMETADATA.METADATAKVID }, false);
//        public static Index DATAFRAMEMETADATA_PRIMARY = Internal.createIndex("PRIMARY", Dataframemetadata.DATAFRAMEMETADATA, new OrderField[] { Dataframemetadata.DATAFRAMEMETADATA.ID }, true);
//        public static Index DATAFRAMESPLIT_DATAFRAMEID = Internal.createIndex("dataFrameId", Dataframesplit.DATAFRAMESPLIT, new OrderField[] { Dataframesplit.DATAFRAMESPLIT.DATAFRAMEID }, false);
//        public static Index DATAFRAMESPLIT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Dataframesplit.DATAFRAMESPLIT, new OrderField[] { Dataframesplit.DATAFRAMESPLIT.EXPERIMENTRUN }, false);
//        public static Index DATAFRAMESPLIT_PRIMARY = Internal.createIndex("PRIMARY", Dataframesplit.DATAFRAMESPLIT, new OrderField[] { Dataframesplit.DATAFRAMESPLIT.ID }, true);
//        public static Index DATAFRAMESPLIT_SPLITEVENTID = Internal.createIndex("splitEventId", Dataframesplit.DATAFRAMESPLIT, new OrderField[] { Dataframesplit.DATAFRAMESPLIT.SPLITEVENTID }, false);
//        public static Index EVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Event.EVENT, new OrderField[] { Event.EVENT.EXPERIMENTRUN }, false);
//        public static Index EVENT_PRIMARY = Internal.createIndex("PRIMARY", Event.EVENT, new OrderField[] { Event.EVENT.ID }, true);
//        public static Index EXPERIMENT_PRIMARY = Internal.createIndex("PRIMARY", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.ID }, true);
//        public static Index EXPERIMENT_PROJECT = Internal.createIndex("project", Experiment.EXPERIMENT, new OrderField[] { Experiment.EXPERIMENT.PROJECT }, false);
//        public static Index EXPERIMENTRUN_EXPERIMENT = Internal.createIndex("experiment", Experimentrun.EXPERIMENTRUN, new OrderField[] { Experimentrun.EXPERIMENTRUN.EXPERIMENT }, false);
//        public static Index EXPERIMENTRUN_PRIMARY = Internal.createIndex("PRIMARY", Experimentrun.EXPERIMENTRUN, new OrderField[] { Experimentrun.EXPERIMENTRUN.ID }, true);
//        public static Index FEATURE_FEATUREINDEXNAME = Internal.createIndex("FeatureIndexName", Feature.FEATURE, new OrderField[] { Feature.FEATURE.NAME }, false);
//        public static Index FEATURE_FEATUREINDEXTRANSFORMER = Internal.createIndex("FeatureIndexTransformer", Feature.FEATURE, new OrderField[] { Feature.FEATURE.TRANSFORMER }, false);
//        public static Index FEATURE_PRIMARY = Internal.createIndex("PRIMARY", Feature.FEATURE, new OrderField[] { Feature.FEATURE.ID }, true);
//        public static Index FITEVENT_DF = Internal.createIndex("df", Fitevent.FITEVENT, new OrderField[] { Fitevent.FITEVENT.DF }, false);
//        public static Index FITEVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Fitevent.FITEVENT, new OrderField[] { Fitevent.FITEVENT.EXPERIMENTRUN }, false);
//        public static Index FITEVENT_FITEVENTINDEXTRANSFORMER = Internal.createIndex("FitEventIndexTransformer", Fitevent.FITEVENT, new OrderField[] { Fitevent.FITEVENT.TRANSFORMER }, false);
//        public static Index FITEVENT_PRIMARY = Internal.createIndex("PRIMARY", Fitevent.FITEVENT, new OrderField[] { Fitevent.FITEVENT.ID }, true);
//        public static Index FITEVENT_TRANSFORMERSPEC = Internal.createIndex("transformerSpec", Fitevent.FITEVENT, new OrderField[] { Fitevent.FITEVENT.TRANSFORMERSPEC }, false);
//        public static Index GRIDCELLCROSSVALIDATION_CROSSVALIDATION = Internal.createIndex("crossValidation", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, new OrderField[] { Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.CROSSVALIDATION }, false);
//        public static Index GRIDCELLCROSSVALIDATION_EXPERIMENTRUN = Internal.createIndex("experimentRun", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, new OrderField[] { Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.EXPERIMENTRUN }, false);
//        public static Index GRIDCELLCROSSVALIDATION_GRIDSEARCH = Internal.createIndex("gridSearch", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, new OrderField[] { Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.GRIDSEARCH }, false);
//        public static Index GRIDCELLCROSSVALIDATION_PRIMARY = Internal.createIndex("PRIMARY", Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, new OrderField[] { Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID }, true);
//        public static Index GRIDSEARCHCROSSVALIDATIONEVENT_BEST = Internal.createIndex("best", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, new OrderField[] { Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.BEST }, false);
//        public static Index GRIDSEARCHCROSSVALIDATIONEVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, new OrderField[] { Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.EXPERIMENTRUN }, false);
//        public static Index GRIDSEARCHCROSSVALIDATIONEVENT_PRIMARY = Internal.createIndex("PRIMARY", Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT, new OrderField[] { Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT.ID }, true);
//        public static Index HYPERPARAMETER_EXPERIMENTRUN = Internal.createIndex("experimentRun", Hyperparameter.HYPERPARAMETER, new OrderField[] { Hyperparameter.HYPERPARAMETER.EXPERIMENTRUN }, false);
//        public static Index HYPERPARAMETER_PRIMARY = Internal.createIndex("PRIMARY", Hyperparameter.HYPERPARAMETER, new OrderField[] { Hyperparameter.HYPERPARAMETER.ID }, true);
//        public static Index HYPERPARAMETER_SPEC = Internal.createIndex("spec", Hyperparameter.HYPERPARAMETER, new OrderField[] { Hyperparameter.HYPERPARAMETER.SPEC }, false);
//        public static Index LINEARMODEL_MODEL = Internal.createIndex("model", Linearmodel.LINEARMODEL, new OrderField[] { Linearmodel.LINEARMODEL.MODEL }, false);
//        public static Index LINEARMODEL_PRIMARY = Internal.createIndex("PRIMARY", Linearmodel.LINEARMODEL, new OrderField[] { Linearmodel.LINEARMODEL.ID }, true);
//        public static Index LINEARMODELTERM_MODEL = Internal.createIndex("model", Linearmodelterm.LINEARMODELTERM, new OrderField[] { Linearmodelterm.LINEARMODELTERM.MODEL }, false);
//        public static Index LINEARMODELTERM_PRIMARY = Internal.createIndex("PRIMARY", Linearmodelterm.LINEARMODELTERM, new OrderField[] { Linearmodelterm.LINEARMODELTERM.ID }, true);
//        public static Index METADATAKV_PRIMARY = Internal.createIndex("PRIMARY", Metadatakv.METADATAKV, new OrderField[] { Metadatakv.METADATAKV.ID }, true);
//        public static Index METRICEVENT_DF = Internal.createIndex("df", Metricevent.METRICEVENT, new OrderField[] { Metricevent.METRICEVENT.DF }, false);
//        public static Index METRICEVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Metricevent.METRICEVENT, new OrderField[] { Metricevent.METRICEVENT.EXPERIMENTRUN }, false);
//        public static Index METRICEVENT_PRIMARY = Internal.createIndex("PRIMARY", Metricevent.METRICEVENT, new OrderField[] { Metricevent.METRICEVENT.ID }, true);
//        public static Index METRICEVENT_TRANSFORMER = Internal.createIndex("transformer", Metricevent.METRICEVENT, new OrderField[] { Metricevent.METRICEVENT.TRANSFORMER }, false);
//        public static Index MODELOBJECTIVEHISTORY_MODEL = Internal.createIndex("model", Modelobjectivehistory.MODELOBJECTIVEHISTORY, new OrderField[] { Modelobjectivehistory.MODELOBJECTIVEHISTORY.MODEL }, false);
//        public static Index MODELOBJECTIVEHISTORY_PRIMARY = Internal.createIndex("PRIMARY", Modelobjectivehistory.MODELOBJECTIVEHISTORY, new OrderField[] { Modelobjectivehistory.MODELOBJECTIVEHISTORY.ID }, true);
//        public static Index PIPELINESTAGE_EXPERIMENTRUN = Internal.createIndex("experimentRun", Pipelinestage.PIPELINESTAGE, new OrderField[] { Pipelinestage.PIPELINESTAGE.EXPERIMENTRUN }, false);
//        public static Index PIPELINESTAGE_PIPELINEFITEVENT = Internal.createIndex("pipelineFitEvent", Pipelinestage.PIPELINESTAGE, new OrderField[] { Pipelinestage.PIPELINESTAGE.PIPELINEFITEVENT }, false);
//        public static Index PIPELINESTAGE_PRIMARY = Internal.createIndex("PRIMARY", Pipelinestage.PIPELINESTAGE, new OrderField[] { Pipelinestage.PIPELINESTAGE.ID }, true);
//        public static Index PIPELINESTAGE_TRANSFORMORFITEVENT = Internal.createIndex("transformOrFitEvent", Pipelinestage.PIPELINESTAGE, new OrderField[] { Pipelinestage.PIPELINESTAGE.TRANSFORMORFITEVENT }, false);
//        public static Index PROJECT_PRIMARY = Internal.createIndex("PRIMARY", Project.PROJECT, new OrderField[] { Project.PROJECT.ID }, true);
//        public static Index RANDOMSPLITEVENT_EXPERIMENTRUN = Internal.createIndex("experimentRun", Randomsplitevent.RANDOMSPLITEVENT, new OrderField[] { Randomsplitevent.RANDOMSPLITEVENT.EXPERIMENTRUN }, false);
//        public static Index RANDOMSPLITEVENT_INPUTDATAFRAMEID = Internal.createIndex("inputDataFrameId", Randomsplitevent.RANDOMSPLITEVENT, new OrderField[] { Randomsplitevent.RANDOMSPLITEVENT.INPUTDATAFRAMEID }, false);
//        public static Index RANDOMSPLITEVENT_PRIMARY = Internal.createIndex("PRIMARY", Randomsplitevent.RANDOMSPLITEVENT, new OrderField[] { Randomsplitevent.RANDOMSPLITEVENT.ID }, true);
//        public static Index TRANSFORMER_EXPERIMENTRUN = Internal.createIndex("experimentRun", Transformer.TRANSFORMER, new OrderField[] { Transformer.TRANSFORMER.EXPERIMENTRUN }, false);
//        public static Index TRANSFORMER_PRIMARY = Internal.createIndex("PRIMARY", Transformer.TRANSFORMER, new OrderField[] { Transformer.TRANSFORMER.ID }, true);
//        public static Index TRANSFORMERSPEC_EXPERIMENTRUN = Internal.createIndex("experimentRun", Transformerspec.TRANSFORMERSPEC, new OrderField[] { Transformerspec.TRANSFORMERSPEC.EXPERIMENTRUN }, false);
//        public static Index TRANSFORMERSPEC_PRIMARY = Internal.createIndex("PRIMARY", Transformerspec.TRANSFORMERSPEC, new OrderField[] { Transformerspec.TRANSFORMERSPEC.ID }, true);
//        public static Index TRANSFORMEVENT_OLDDF = Internal.createIndex("oldDf", Transformevent.TRANSFORMEVENT, new OrderField[] { Transformevent.TRANSFORMEVENT.OLDDF }, false);
//        public static Index TRANSFORMEVENT_PRIMARY = Internal.createIndex("PRIMARY", Transformevent.TRANSFORMEVENT, new OrderField[] { Transformevent.TRANSFORMEVENT.ID }, true);
//        public static Index TRANSFORMEVENT_TRANSFORMER = Internal.createIndex("transformer", Transformevent.TRANSFORMEVENT, new OrderField[] { Transformevent.TRANSFORMEVENT.TRANSFORMER }, false);
//        public static Index TRANSFORMEVENT_TRANSFORMEVENTINDEXEXPERIMENTRUN = Internal.createIndex("TransformEventIndexExperimentRun", Transformevent.TRANSFORMEVENT, new OrderField[] { Transformevent.TRANSFORMEVENT.EXPERIMENTRUN }, false);
//        public static Index TRANSFORMEVENT_TRANSFORMEVENTINDEXNEWDF = Internal.createIndex("TransformEventIndexNewDf", Transformevent.TRANSFORMEVENT, new OrderField[] { Transformevent.TRANSFORMEVENT.NEWDF }, false);
//        public static Index TREELINK_CHILD = Internal.createIndex("child", Treelink.TREELINK, new OrderField[] { Treelink.TREELINK.CHILD }, false);
//        public static Index TREELINK_PARENT = Internal.createIndex("parent", Treelink.TREELINK, new OrderField[] { Treelink.TREELINK.PARENT }, false);
//        public static Index TREELINK_PRIMARY = Internal.createIndex("PRIMARY", Treelink.TREELINK, new OrderField[] { Treelink.TREELINK.ID }, true);
//        public static Index TREEMODEL_MODEL = Internal.createIndex("model", Treemodel.TREEMODEL, new OrderField[] { Treemodel.TREEMODEL.MODEL }, false);
//        public static Index TREEMODEL_PRIMARY = Internal.createIndex("PRIMARY", Treemodel.TREEMODEL, new OrderField[] { Treemodel.TREEMODEL.ID }, true);
//        public static Index TREEMODELCOMPONENT_MODEL = Internal.createIndex("model", Treemodelcomponent.TREEMODELCOMPONENT, new OrderField[] { Treemodelcomponent.TREEMODELCOMPONENT.MODEL }, false);
//        public static Index TREEMODELCOMPONENT_PRIMARY = Internal.createIndex("PRIMARY", Treemodelcomponent.TREEMODELCOMPONENT, new OrderField[] { Treemodelcomponent.TREEMODELCOMPONENT.ID }, true);
//        public static Index TREEMODELCOMPONENT_ROOTNODE = Internal.createIndex("rootNode", Treemodelcomponent.TREEMODELCOMPONENT, new OrderField[] { Treemodelcomponent.TREEMODELCOMPONENT.ROOTNODE }, false);
//        public static Index TREENODE_PRIMARY = Internal.createIndex("PRIMARY", Treenode.TREENODE, new OrderField[] { Treenode.TREENODE.ID }, true);
//        public static Index TREENODE_ROOTNODE = Internal.createIndex("rootNode", Treenode.TREENODE, new OrderField[] { Treenode.TREENODE.ROOTNODE }, false);
//    }
//}
